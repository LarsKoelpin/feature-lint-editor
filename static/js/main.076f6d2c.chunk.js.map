{"version":3,"sources":["reportWebVitals.ts","features/domain-editor/models/editor-core/BuildingBlockFigure.ts","features/domain-editor/models/editor-core/RuleTool.ts","features/domain-editor/models/editor-core/Tool.ts","features/react-editor/components/hud/MenuEntry.tsx","features/react-editor/components/hud/ToolBar.tsx","features/domain-editor/models/editor-core/RuleGhost.ts","features/react-editor/components/getPos.ts","features/react-editor/components/figures/UIFeature.tsx","features/react-editor/components/figures/UIBuildingBlockFigure.tsx","features/domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigureId.ts","features/domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure.ts","features/react-editor/components/figures/UIDependencyRule.tsx","features/react-editor/components/DrawingPlane.tsx","features/react-editor/components/useWindowSize.ts","features/domain-editor/interactions/update-buildingblock.ts","features/domain-editor/models/editor-core/dependency-rule/DependencyRuleFigureId.ts","features/domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure.ts","features/react-editor/components/Details.tsx","features/domain-editor/models/editor-core/figure/geometry.ts","features/react-editor/components/hud/TopBar.tsx","features/domain-editor/interactions/update-featuretype.ts","features/react-editor/wired/EditorPlane.tsx","features/domain-editor/interactions/query-buildingBlocks.ts","features/react-editor/controllers/useDrawingState.ts","features/react-editor/controllers/useToolState.ts","features/domain-editor/interactions/place-buildingblock.ts","features/domain-editor/interactions/place-dependency-rule.ts","features/domain-editor/interactions/close-selection.ts","features/domain-editor/interactions/building-block-selection.ts","features/domain-converter/interactions/convertToFeatureLintJson.ts","appshell/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ID_SCHEMA","BuildingBlockFigureIdSchema","vod","zod","refine","x","startsWith","BuildingBlockFigureId","create","BuildingBlockFigureSchema","id","bbName","type","positive","y","width","height","BuildingBlockFigure","RuleToolSchema","from","nullable","to","RuleTool","SelectionToolSchema","PlaceBuildingBlockSchema","PlaceFeatureTypeSchema","ToolSchema","Tool","MenuEntry","styled","button","props","active","ICON_SIZE","ToolBar","tool","selectTool","SidebarContainer","currentTool","onClick","path","mdiCursorDefault","size","color","mdiHexagon","mdiHexagonMultipleOutline","mdiRelationManyToOne","div","RuleGhost","endX","endY","getPos","e","screenPos","target","getStage","getPointerPosition","getElementPos","position","Error","UiFeature","figure","updateFeatureType","useState","textEdit","setTextEdit","posInfo","setPosInfo","textNode","useRef","draggable","onDragMove","pos","updatePosition","onKeyDown","keyCode","onChange","updateName","value","ref","focus","style","background","name","preventDefault","listening","fill","wrap","align","verticalAlign","text","fontSize","onDblClick","event","textPosition","current","getAbsolutePosition","stageBox","currentTarget","container","getBoundingClientRect","areaPosition","left","top","strokeWidth","stroke","UiBuildingBlockFigure","onSelect","updateBuildingBlock","offset","onDragEnd","ID_START","FeatureTypeFigureIdSchema","FeatureTypeFigureId","FeatureTypeFigure","UiDependencyRule","queryBuildingBlocks","rule","buildingBlockById","console","log","points","DrawingPlane","t","figures","selectRule","window","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","Container","onMouseMove","setRuleGhost","oldGhost","clickListener","featureTypeFigures","map","buildingBlockFigures","ruleGhost","rules","placeFeature","placeBuildingBlock","nanoid","createUpdateBuildingBlock","bbs","onBuildingBlocks","bb","newName","b","findIndex","h","result","R","old","withName","withPosition","DependencyRuleFigureIdSchema","DependencyRuleFigure","Details","buildingBlockId","query","onClose","DetailsContainer","Headline","toGeometryRect","f","bottom","right","TopBar","convertToJson","TopContainer","mdiUpload","mdiContentSave","createUpdateFeatureType","onFeatures","featureTypes","EditorPlane","setFeatureTypeFigures","setBuildingBlockFigures","setRules","useDrawingState","setCurrentTool","details","setDetails","useToolState","onBuildingBlocksUpdated","buildingBlocks","created","updatedBbs","createPlaceBuildingBlock","placeDependencyRule","onRules","startBB","endBB","start","find","end","newRules","createPlaceDependencyRule","r","closeSelection","onDetails","createCloseSelection","d","toolBuildingBlockInteraction","onToolUpdated","onSelectedBuildingBlock","updatedTool","createSelectBuildingBlockForRule","dependencyRules","onConfig","big","small","allFeatureTypes","featureRect","$schema","rootDir","createConvertToFeatureLint","cfg","alert","JSON","stringify","Plane","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.076f6d2c.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { nanoid } from \"nanoid\";\n\nconst ID_SCHEMA = \"urn:building-block-figure:\";\nexport const BuildingBlockFigureIdSchema = vod(\n  \"BuildingBlockFigureId\",\n  zod.string().refine((x) => x.startsWith(ID_SCHEMA))\n);\nexport type BuildingBlockFigureId = zod.infer<\n  typeof BuildingBlockFigureIdSchema\n>;\nexport const BuildingBlockFigureId = BuildingBlockFigureIdSchema.create;\n\nexport const NewBuildingBlockFigureId = () =>\n  BuildingBlockFigureIdSchema.create(ID_SCHEMA + nanoid());\n\nexport const BuildingBlockFigureSchema = vod(\n  \"BuildingBlockFigure\",\n  zod.object({\n    id: BuildingBlockFigureIdSchema,\n    bbName: zod.string(),\n    type: zod.literal(\"BuildingBlockFigure\"),\n    x: zod.number().positive(),\n    y: zod.number().positive(),\n    width: zod.number().positive(),\n    height: zod.number().positive(),\n  })\n);\n\nexport type BuildingBlockFigure = zod.infer<typeof BuildingBlockFigureSchema>;\nexport const BuildingBlockFigure = BuildingBlockFigureSchema.create;\n\nexport const withPosition = (x: number, y: number, bb: BuildingBlockFigure) => {\n  return BuildingBlockFigure({ ...bb, x, y });\n};\n\nexport const withName = (name: string, bb: BuildingBlockFigure) => {\n  return BuildingBlockFigure({ ...bb, bbName: name });\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { BuildingBlockFigureSchema } from \"./BuildingBlockFigure\";\nimport { Tool } from \"./Tool\";\n\nexport const RuleToolSchema = vod(\n  \"RuleTool\",\n  zod.object({\n    type: zod.literal(\"PLACE_RULE\"),\n    from: BuildingBlockFigureSchema.nullable(),\n    to: BuildingBlockFigureSchema.nullable(),\n  })\n);\nexport type RuleTool = zod.infer<typeof RuleToolSchema>;\nexport const RuleTool = RuleToolSchema.create;\n\nexport const isFirstSelection = (t: RuleTool) => {\n  return t.from === null;\n};\n\nexport const isWaitingForSecondSelection = (t: Tool): t is RuleTool => {\n  return t.type === \"PLACE_RULE\" && t.from !== null;\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { RuleTool, RuleToolSchema } from \"./RuleTool\";\n\nexport const SelectionToolSchema = vod(\n  \"Visual-Selection\",\n  zod.object({\n    type: zod.literal(\"SELECTION\"),\n  })\n);\nexport const PlaceBuildingBlockSchema = vod(\n  \"Visual-BB\",\n  zod.object({\n    type: zod.literal(\"PLACE_BUILDING_BLOCK\"),\n  })\n);\nexport const PlaceFeatureTypeSchema = vod(\n  \"Visual-Feature\",\n  zod.object({\n    type: zod.literal(\"PLACE_FEATURE\"),\n  })\n);\n\nexport const ToolSchema = vod(\n  \"Tool\",\n  zod.union([\n    SelectionToolSchema,\n    PlaceBuildingBlockSchema,\n    PlaceFeatureTypeSchema,\n    RuleToolSchema,\n  ])\n);\n\nexport const VisualBuildingBlock = PlaceBuildingBlockSchema.create;\nexport const SelectionTool = SelectionToolSchema.create;\nexport const Tool = ToolSchema.create;\nexport type Tool = zod.infer<typeof ToolSchema> | RuleTool;\n","import styled from \"styled-components\";\n\nexport const MenuEntry = styled.button<{ active: boolean }>`\n  padding: 8px;\n  font-size: 12px;\n  outline: none;\n  border: 0;\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  background: ${(props) => {\n    if (props.active) {\n      return \"#f6f6f6\";\n    }\n    return \"transparent\";\n  }};\n  &:hover {\n    background: ${(props) => {\n      if (props.active) {\n        return \"#f6f6f6\";\n      }\n      return \"#ececec\";\n    }};\n    cursor: pointer;\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@mdi/react\";\nimport {\n  mdiCursorDefault,\n  mdiHexagon,\n  mdiHexagonMultipleOutline,\n  mdiRelationManyToOne,\n} from \"@mdi/js\";\nimport { ToolState } from \"../../controllers/useToolState\";\nimport { Tool } from \"../../../domain-editor/models/editor-core/Tool\";\nimport { MenuEntry } from \"./MenuEntry\";\n\ntype Props = {\n  tool: ToolState;\n  selectTool: (t: Tool) => any;\n};\nconst ICON_SIZE = 1.1;\nexport const ToolBar = ({ tool, selectTool }: Props) => {\n  return (\n    <SidebarContainer>\n      <MenuEntry\n        active={tool.currentTool.type === \"SELECTION\"}\n        onClick={() => selectTool(Tool({ type: \"SELECTION\" }))}\n      >\n        <Icon path={mdiCursorDefault} size={ICON_SIZE} color=\"grey\" />\n        Select\n      </MenuEntry>\n      <MenuEntry\n        active={tool.currentTool.type === \"PLACE_FEATURE\"}\n        onClick={() => selectTool(Tool({ type: \"PLACE_FEATURE\" }))}\n      >\n        <Icon path={mdiHexagon} size={ICON_SIZE} color=\"grey\" />\n        Feature\n      </MenuEntry>\n      <MenuEntry\n        active={tool.currentTool.type === \"PLACE_BUILDING_BLOCK\"}\n        onClick={() => selectTool(Tool({ type: \"PLACE_BUILDING_BLOCK\" }))}\n      >\n        <Icon path={mdiHexagonMultipleOutline} size={ICON_SIZE} color=\"grey\" />\n        Building Block\n      </MenuEntry>\n      <MenuEntry\n        active={tool.currentTool.type === \"PLACE_RULE\"}\n        onClick={() =>\n          selectTool(Tool({ type: \"PLACE_RULE\", from: null, to: null }))\n        }\n      >\n        <Icon path={mdiRelationManyToOne} size={ICON_SIZE} color=\"grey\" />\n        Rule\n      </MenuEntry>\n    </SidebarContainer>\n  );\n};\n\nconst SidebarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: centeR;\n  justify-content: flex-start;\n  left: 8px;\n  top: 30%;\n  position: absolute;\n  width: 64px;\n  background: white;\n  z-index: 99999;\n  border-radius: 5px;\n\n  -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n`;\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\n\nexport const RuleGhostSchema = vod(\n  \"RuleGhost\",\n  zod.object({\n    endX: zod.number(),\n    endY: zod.number(),\n  })\n);\nexport type RuleGhost = zod.infer<typeof RuleGhostSchema>;\nexport const RuleGhost = RuleGhostSchema.create;\n","import { KonvaEventObject } from \"konva/lib/Node\";\n\nexport const getPos = (e: KonvaEventObject<any>): { x: number; y: number } => {\n  const screenPos = e.target.getStage()?.getPointerPosition();\n  if (screenPos?.x && screenPos.y) {\n    return screenPos;\n  }\n  return { x: 0, y: 0 };\n};\n\nexport const getElementPos = (\n  e: KonvaEventObject<any>\n): { x: number; y: number } => {\n  const screenPos = e.target.position();\n  if (screenPos?.x && screenPos.y) {\n    return screenPos;\n  }\n  throw new Error(\"No element pos possible\");\n};\n","import * as React from \"react\";\nimport { Group, Rect, Text } from \"react-konva\";\nimport { FeatureTypeFigure } from \"../../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { getElementPos } from \"../getPos\";\nimport { UpdateFeatureType } from \"../../../domain-editor/interactions/update-featuretype\";\nimport { Html } from \"react-konva-utils\";\nimport { useRef, useState } from \"react\";\n\ntype Props = {\n  figure: FeatureTypeFigure;\n  updateFeatureType: UpdateFeatureType;\n};\nexport const UiFeature = ({ figure, updateFeatureType }: Props) => {\n  const [textEdit, setTextEdit] = useState<boolean>(false);\n  const [posInfo, setPosInfo] = useState<any>({});\n  const textNode = useRef<any>();\n\n  const height = figure.height;\n  const width = figure.width;\n  return (\n    <Group\n      draggable={true}\n      onDragMove={(e) => {\n        const pos = getElementPos(e);\n        updateFeatureType.updatePosition(figure, pos.x, pos.y);\n      }}\n    >\n      {textEdit ? (\n        <Html>\n          <textarea\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) {\n                setTextEdit(false);\n              }\n            }}\n            onChange={(e) => {\n              updateFeatureType.updateName(figure, e.target.value);\n            }}\n            ref={(ref) => ref?.focus()}\n            style={{\n              background: \"red\",\n              position: \"absolute\",\n              ...posInfo,\n              height: height + \"px\",\n            }}\n          >\n            {figure.name}\n          </textarea>\n        </Html>\n      ) : null}\n      <Text\n        ref={textNode as any}\n        preventDefault={true}\n        listening={false}\n        fill={\"black\"}\n        wrap={\"none\"}\n        align={\"center\"}\n        verticalAlign=\"middle\"\n        width={200}\n        height={50}\n        text={figure.name}\n        x={figure.x}\n        y={figure.y}\n        fontSize={20}\n      />\n      <Rect\n        onDblClick={(event) => {\n          setTextEdit(!textEdit);\n          const textPosition = textNode.current!.getAbsolutePosition();\n          const stage = event.currentTarget.getStage();\n          const stageBox = stage!.container().getBoundingClientRect();\n          const areaPosition = {\n            x: stageBox.left + textPosition.x,\n            y: stageBox.top + textPosition.y,\n          };\n          setPosInfo({\n            top: areaPosition.y + \"px\",\n            left: areaPosition.x + \"px\",\n            width: width + \"px\",\n          });\n        }}\n        draggable\n        x={figure.x}\n        y={figure.y}\n        height={height}\n        width={width}\n        strokeWidth={5}\n        stroke={\"black\"}\n      />\n    </Group>\n  );\n};\n","import * as React from \"react\";\nimport { Text, Rect, Group } from \"react-konva\";\nimport { Html } from \"react-konva-utils\";\nimport { BuildingBlockFigure } from \"../../../domain-editor/models/editor-core/BuildingBlockFigure\";\nimport { getElementPos } from \"../getPos\";\nimport { UpdateBuildingBlock } from \"../../../domain-editor/interactions/update-buildingblock\";\nimport { useRef, useState } from \"react\";\n\ntype Props = {\n  figure: BuildingBlockFigure;\n  onSelect: (bb: BuildingBlockFigure) => any;\n  updateBuildingBlock: UpdateBuildingBlock;\n};\nexport const UiBuildingBlockFigure = ({\n  figure,\n  onSelect,\n  updateBuildingBlock,\n}: Props) => {\n  const [textEdit, setTextEdit] = useState<boolean>(false);\n  const [posInfo, setPosInfo] = useState<any>({});\n  const textNode = useRef<any>();\n  const width = figure.width;\n  const height = figure.height;\n\n  const fontSize = 20;\n  const offset = height / fontSize;\n  const color = textEdit ? \"green\" : \"red\";\n  return (\n    <Group\n      draggable={true}\n      onDragEnd={(e) => {\n        const pos = getElementPos(e);\n        updateBuildingBlock.updatePosition(figure, pos.x, pos.y);\n      }}\n      onDragMove={(e) => {\n        const pos = getElementPos(e);\n        updateBuildingBlock.updatePosition(figure, pos.x, pos.y);\n      }}\n      onClick={(e) => {\n        onSelect(figure);\n      }}\n    >\n      {textEdit ? (\n        <Html>\n          <textarea\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) {\n                setTextEdit(false);\n              }\n            }}\n            onChange={(e) => {\n              updateBuildingBlock.updateName(figure, e.target.value);\n            }}\n            ref={(ref) => ref?.focus()}\n            style={{\n              background: \"red\",\n              position: \"absolute\",\n              ...posInfo,\n              height: height + \"px\",\n            }}\n          >\n            {figure.bbName}\n          </textarea>\n        </Html>\n      ) : null}\n      <Rect\n        onDblClick={(event) => {\n          setTextEdit(!textEdit);\n          const textPosition = textNode.current!.getAbsolutePosition();\n          const stage = event.currentTarget.getStage();\n          const stageBox = stage!.container().getBoundingClientRect();\n          const areaPosition = {\n            x: stageBox.left + textPosition.x,\n            y: stageBox.top + textPosition.y,\n          };\n          setPosInfo({\n            top: areaPosition.y + \"px\",\n            left: areaPosition.x + \"px\",\n            width: width + \"px\",\n          });\n        }}\n        draggable\n        x={figure.x}\n        y={figure.y}\n        width={width}\n        height={height}\n        stroke={color}\n      />\n      <Text\n        preventDefault={true}\n        ref={textNode as any}\n        listening={false}\n        fill={color}\n        wrap={\"none\"}\n        align={\"center\"}\n        verticalAlign=\"middle\"\n        width={width}\n        height={height}\n        text={figure.bbName}\n        x={figure.x}\n        y={figure.y + offset / 2}\n        fontSize={fontSize}\n      />\n    </Group>\n  );\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { nanoid } from \"nanoid\";\n\nconst ID_START = \"urn:feature-type:\";\nexport const FeatureTypeFigureIdSchema = vod(\n  \"FeatureTypeFigureId\",\n  zod.string().refine((x) => x.startsWith(ID_START))\n);\n\nexport type FeatureTypeFigureId = zod.infer<typeof FeatureTypeFigureIdSchema>;\nexport const FeatureTypeFigureId = FeatureTypeFigureIdSchema.create;\nexport const NewFeatureTypeFigureId = (): FeatureTypeFigureId =>\n  FeatureTypeFigureId(ID_START + nanoid());\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { FeatureTypeFigureIdSchema } from \"./FeatureTypeFigureId\";\n\nexport const FeatureTypeFigureSchema = vod(\n  \"FeatureRep\",\n  zod.object({\n    id: FeatureTypeFigureIdSchema,\n    name: zod.string(),\n    type: zod.literal(\"FeatureFigure\"),\n    x: zod.number().positive(),\n    y: zod.number().positive(),\n    width: zod.number().positive(),\n    height: zod.number().positive(),\n  })\n);\n\nexport type FeatureTypeFigure = zod.infer<typeof FeatureTypeFigureSchema>;\nexport const FeatureTypeFigure = FeatureTypeFigureSchema.create;\n\nexport const withPosition = (x: number, y: number, bb: FeatureTypeFigure) => {\n  return FeatureTypeFigure({ ...bb, x, y });\n};\n\nexport const withName = (name: string, bb: FeatureTypeFigure) => {\n  return FeatureTypeFigure({ ...bb, name: name });\n};\n","import * as React from \"react\";\nimport { Arrow } from \"react-konva\";\nimport { DependencyRuleFigure } from \"../../../domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure\";\nimport { QueryBuildingBlocks } from \"../../../domain-editor/interactions/query-buildingBlocks\";\nimport { BuildingBlockFigureId } from \"../../../domain-editor/models/editor-core/BuildingBlockFigure\";\n\ntype Props = {\n  rule: DependencyRuleFigure;\n  queryBuildingBlocks: QueryBuildingBlocks;\n};\nexport const UiDependencyRule = ({ queryBuildingBlocks, rule }: Props) => {\n  const from = queryBuildingBlocks.buildingBlockById(\n    BuildingBlockFigureId(rule.from)\n  );\n  const to = queryBuildingBlocks.buildingBlockById(\n    BuildingBlockFigureId(rule.to)\n  );\n\n  if (to && from) {\n    return (\n      <Arrow\n        onClick={() => console.log(\"HELLO\")}\n        points={[from.x, from.y, to.x, to.y]}\n        stroke={\"red\"}\n        strokeWidth={5}\n      />\n    );\n  }\n  return null;\n};\n","import * as React from \"react\";\nimport { Arrow, Layer, Rect, Stage } from \"react-konva\";\nimport { useWindowSize } from \"./useWindowSize\";\nimport { Figures } from \"../controllers/useDrawingState\";\n\nimport { ToolState } from \"../controllers/useToolState\";\nimport { RuleGhost } from \"../../domain-editor/models/editor-core/RuleGhost\";\nimport { getPos } from \"./getPos\";\nimport { UiFeature } from \"./figures/UIFeature\";\nimport { UiBuildingBlockFigure } from \"./figures/UIBuildingBlockFigure\";\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { BuildingBlockFigure } from \"../../domain-editor/models/editor-core/BuildingBlockFigure\";\nimport { QueryBuildingBlocks } from \"../../domain-editor/interactions/query-buildingBlocks\";\nimport { isWaitingForSecondSelection } from \"../../domain-editor/models/editor-core/RuleTool\";\nimport { UpdateBuildingBlock } from \"../../domain-editor/interactions/update-buildingblock\";\nimport { UiDependencyRule } from \"./figures/UIDependencyRule\";\nimport { PlaceBuildingblock } from \"../../domain-editor/interactions/place-buildingblock\";\nimport styled from \"styled-components\";\nimport { NewFeatureTypeFigureId } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigureId\";\nimport { UpdateFeatureType } from \"../../domain-editor/interactions/update-featuretype\";\n\ntype Props = {\n  tool: ToolState;\n  figures: Figures;\n  placeFeature: (f: FeatureTypeFigure) => any;\n  queryBuildingBlocks: QueryBuildingBlocks;\n  updateBuildingBlock: UpdateBuildingBlock;\n  updateFeatureType: UpdateFeatureType;\n  placeBuildingBlock: PlaceBuildingblock;\n  selectRule: (bb: BuildingBlockFigure) => any;\n};\nexport const DrawingPlane = (props: Props) => {\n  const {\n    figures,\n    tool,\n    updateBuildingBlock,\n    selectRule,\n    queryBuildingBlocks,\n    updateFeatureType,\n  } = props;\n  const size = useWindowSize();\n\n  const { currentTool } = tool;\n\n  return (\n    <Container>\n      <Stage\n        height={size.height}\n        width={size.width}\n        onMouseMove={(e) => {\n          const screenPos = getPos(e);\n          tool.setRuleGhost((oldGhost) => {\n            return RuleGhost({\n              endX: screenPos.x,\n              endY: screenPos.y,\n            });\n          });\n        }}\n        onClick={(e) => {\n          const screenPos = getPos(e);\n          console.log(\"CLICK ON\");\n          clickListener(props, { x: screenPos.x, y: screenPos.y });\n        }}\n      >\n        <Layer>\n          <Rect\n            listening={false}\n            x={0}\n            y={0}\n            width={size.width}\n            height={size.height}\n            fill={\"#fbfbfb\"}\n          />\n        </Layer>\n        <Layer>\n          {figures.featureTypeFigures.map((x) => (\n            <UiFeature\n              key={x.id}\n              figure={x}\n              updateFeatureType={updateFeatureType}\n            />\n          ))}\n          {figures.buildingBlockFigures.map((x) => (\n            <UiBuildingBlockFigure\n              key={x.id}\n              updateBuildingBlock={updateBuildingBlock}\n              figure={x}\n              onSelect={selectRule}\n            />\n          ))}\n          {isWaitingForSecondSelection(currentTool) && tool.ruleGhost ? (\n            <Arrow\n              listening={false}\n              points={[\n                currentTool.from!.x,\n                currentTool.from!.y,\n                tool.ruleGhost?.endX,\n                tool.ruleGhost?.endY,\n              ]}\n              strokeWidth={2}\n              stroke={\"red\"}\n            />\n          ) : null}\n          {figures.rules.map((rule) => {\n            return (\n              <UiDependencyRule\n                key={rule.id}\n                queryBuildingBlocks={queryBuildingBlocks}\n                rule={rule}\n              />\n            );\n          })}\n        </Layer>\n      </Stage>\n    </Container>\n  );\n};\n\nconst clickListener = (\n  { tool, placeFeature, placeBuildingBlock }: Props,\n  screenPos: { x: number; y: number }\n) => {\n  switch (tool.currentTool.type) {\n    case \"PLACE_FEATURE\":\n      placeFeature(\n        FeatureTypeFigure({\n          name: \"unnamed-feature\",\n          id: NewFeatureTypeFigureId(),\n          height: 500,\n          width: 500,\n          x: screenPos.x,\n          y: screenPos.y,\n          type: \"FeatureFigure\",\n        })\n      );\n      break;\n    case \"PLACE_BUILDING_BLOCK\":\n      placeBuildingBlock(screenPos.x, screenPos.y);\n      break;\n    default:\n      break;\n  }\n};\n\nconst Container = styled.div`\n  cursor: crosshair;\n`;\n","import { useState, useEffect } from \"react\";\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n","import {\n  BuildingBlockFigure,\n  withName,\n  withPosition,\n} from \"../models/editor-core/BuildingBlockFigure\";\nimport * as R from \"ramda\";\n\ntype Listener = {\n  onBuildingBlocks: (bb: BuildingBlockFigure[]) => any;\n};\nexport const createUpdateBuildingBlock = (\n  { onBuildingBlocks }: Listener,\n  bbs: BuildingBlockFigure[]\n) => {\n  return {\n    updateName: (bb: BuildingBlockFigure, newName: string) => {\n      const b = bbs.findIndex((h) => h.id === bb.id);\n      if (b === -1) {\n        return bbs;\n      }\n      const result = R.adjust(b, (old) => withName(newName, old), bbs);\n      onBuildingBlocks(result);\n      return result;\n    },\n    updatePosition: (\n      bb: BuildingBlockFigure,\n      x: number,\n      y: number\n    ): BuildingBlockFigure[] => {\n      const b = bbs.findIndex((h) => h.id === bb.id);\n      if (b === -1) {\n        return bbs;\n      }\n      const result = R.adjust(b, (old) => withPosition(x, y, old), bbs);\n      onBuildingBlocks(result);\n      return result;\n    },\n  };\n};\n\nexport type UpdateBuildingBlock = ReturnType<typeof createUpdateBuildingBlock>;\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { nanoid } from \"nanoid\";\n\nconst ID_START = \"urn:dependency-rule:\";\nexport const DependencyRuleFigureIdSchema = vod(\n  \"DependencyRuleFigureId\",\n  zod.string().refine((x) => x.startsWith(ID_START))\n);\n\nexport type DependencyRuleFigureId = zod.infer<\n  typeof DependencyRuleFigureIdSchema\n>;\nexport const DependencyRuleFigureId = DependencyRuleFigureIdSchema.create;\nexport const NewDependencyRuleFigureId = () => ID_START + nanoid();\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { BuildingBlockFigureIdSchema } from \"../BuildingBlockFigure\";\nimport { DependencyRuleFigureIdSchema } from \"./DependencyRuleFigureId\";\n\nexport const DependencyRuleFigureSchema = vod(\n  \"DependencyRuleFigure\",\n  zod.object({\n    id: DependencyRuleFigureIdSchema,\n    from: BuildingBlockFigureIdSchema,\n    to: BuildingBlockFigureIdSchema,\n  })\n);\nexport type DependencyRuleFigure = zod.infer<typeof DependencyRuleFigureSchema>;\nexport const DependencyRuleFigure = DependencyRuleFigureSchema.create;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { BuildingBlockFigureId } from \"../../domain-editor/models/editor-core/BuildingBlockFigure\";\nimport { QueryBuildingBlocks } from \"../../domain-editor/interactions/query-buildingBlocks\";\n\ntype Props = {\n  buildingBlockId: BuildingBlockFigureId;\n  query: QueryBuildingBlocks;\n  onClose: () => any;\n};\nexport const Details = ({ buildingBlockId, query, onClose }: Props) => {\n  const figure = query.buildingBlockById(buildingBlockId);\n  if (!figure) {\n    return null;\n  }\n  return (\n    <DetailsContainer>\n      <Headline>\n        <h2>Details</h2>\n      </Headline>\n      <h2>{figure.bbName}</h2>\n      {figure.id}\n      <button onClick={onClose}>Close</button>\n    </DetailsContainer>\n  );\n};\n\nconst Headline = styled.div`\n  padding: 8px;\n`;\n\nconst DetailsContainer = styled.div`\n  display: flex;\n  background: red;\n  flex-direction: column;\n  align-items: flex-star;\n  justify-content: flex-start;\n  right: 0;\n  top: 0;\n  height: 100%;\n  position: absolute;\n  width: 400px;\n  background: white;\n  z-index: 99999;\n  border-radius: 5px;\n\n  -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n`;\n","export type GeometryRect = {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n};\n\nexport const toGeometryRect = (f: {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}) => {\n  return {\n    top: f.y,\n    bottom: f.y + f.height,\n    left: f.x,\n    right: f.x + f.width,\n  };\n};\n\nexport const intersectRect = (\n  big: GeometryRect,\n  small: GeometryRect\n): boolean => {\n  return !(\n    small.left > big.right ||\n    small.right < big.left ||\n    small.top > big.bottom ||\n    small.bottom < big.top\n  );\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { MenuEntry } from \"./MenuEntry\";\nimport Icon from \"@mdi/react\";\nimport { mdiContentSave, mdiUpload } from \"@mdi/js\";\nimport { ConvertToFeatureLintJson } from \"../../../domain-converter/interactions/convertToFeatureLintJson\";\n\ntype Props = {\n  convertToJson: ConvertToFeatureLintJson;\n};\nexport const TopBar = ({ convertToJson }: Props) => {\n  return (\n    <TopContainer>\n      <MenuEntry active={false} onClick={convertToJson}>\n        <Icon path={mdiUpload} size={1.1} color=\"grey\" />\n        Load\n      </MenuEntry>\n      <MenuEntry active={false}>\n        <Icon path={mdiContentSave} size={1.1} color=\"grey\" />\n        Save\n      </MenuEntry>\n    </TopContainer>\n  );\n};\n\nconst TopContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  margin: 0 auto;\n  left: 50%;\n  top: 0;\n  position: absolute;\n  height: 64px;\n  min-width: 200px;\n  background: white;\n  z-index: 99999;\n  border-radius: 5px;\n\n  -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n`;\n","import * as R from \"ramda\";\nimport {\n  FeatureTypeFigure,\n  withName,\n  withPosition,\n} from \"../models/editor-core/feature-type-figure/FeatureTypeFigure\";\n\ntype Listener = {\n  onFeatures: (featues: FeatureTypeFigure[]) => any;\n  featureTypes: () => FeatureTypeFigure[];\n};\nexport const createUpdateFeatureType = ({\n  onFeatures,\n  featureTypes,\n}: Listener) => {\n  const bbs = featureTypes();\n  return {\n    updateName: (bb: FeatureTypeFigure, newName: string) => {\n      const b = bbs.findIndex((h) => h.id === bb.id);\n      if (b === -1) {\n        return bbs;\n      }\n      const result = R.adjust(b, (old) => withName(newName, old), bbs);\n      onFeatures(result);\n      return result;\n    },\n    updatePosition: (\n      bb: FeatureTypeFigure,\n      x: number,\n      y: number\n    ): FeatureTypeFigure[] => {\n      const b = bbs.findIndex((h) => h.id === bb.id);\n      if (b === -1) {\n        return bbs;\n      }\n      const result = R.adjust(b, (old) => withPosition(x, y, old), bbs);\n      onFeatures(result);\n      return result;\n    },\n  };\n};\n\nexport type UpdateFeatureType = ReturnType<typeof createUpdateFeatureType>;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { ToolBar } from \"../components/hud/ToolBar\";\nimport { DrawingPlane } from \"../components/DrawingPlane\";\nimport { useToolState } from \"../controllers/useToolState\";\nimport { Tool } from \"../../domain-editor/models/editor-core/Tool\";\nimport { useDrawingState } from \"../controllers/useDrawingState\";\n\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { createQueryBuildingBlocks } from \"../../domain-editor/interactions/query-buildingBlocks\";\nimport { createUpdateBuildingBlock } from \"../../domain-editor/interactions/update-buildingblock\";\nimport { createPlaceDependencyRule } from \"../../domain-editor/interactions/place-dependency-rule\";\nimport { createSelectBuildingBlockForRule } from \"../../domain-editor/interactions/building-block-selection\";\nimport { createPlaceBuildingBlock } from \"../../domain-editor/interactions/place-buildingblock\";\nimport { Details } from \"../components/Details\";\nimport { createCloseSelection } from \"../../domain-editor/interactions/close-selection\";\nimport { BuildingBlockFigureId } from \"../../domain-editor/models/editor-core/BuildingBlockFigure\";\nimport { createConvertToFeatureLint } from \"../../domain-converter/interactions/convertToFeatureLintJson\";\nimport { TopBar } from \"../components/hud/TopBar\";\nimport { createUpdateFeatureType } from \"../../domain-editor/interactions/update-featuretype\";\n\ntype Props = {};\nexport const EditorPlane = (props: Props) => {\n  const figures = useDrawingState();\n  const tool = useToolState();\n\n  const selectToolInteraction = (t: Tool) => tool.setCurrentTool(t);\n  const placeFeature = (f: FeatureTypeFigure) => {\n    figures.setFeatureTypeFigures((old) => [...old, f]);\n    tool.setCurrentTool(Tool({ type: \"SELECTION\" }));\n  };\n\n  const placeBuildingBlock = createPlaceBuildingBlock({\n    onBuildingBlocksUpdated: (bbs) => {\n      figures.setBuildingBlockFigures(bbs);\n      tool.setCurrentTool(Tool({ type: \"SELECTION\" }));\n    },\n    buildingBlocks: () => figures.buildingBlockFigures,\n  });\n\n  const placeDependencyRule = createPlaceDependencyRule({\n    onRules: (r) => figures.setRules(r),\n    buildingBlocks: () => figures.buildingBlockFigures,\n    rules: () => figures.rules,\n  });\n\n  const closeSelection = createCloseSelection({\n    tool: () => tool.currentTool,\n    onDetails: (d) => tool.setDetails(d ? BuildingBlockFigureId(d.id) : null),\n  });\n  const toolBuildingBlockInteraction = createSelectBuildingBlockForRule({\n    onToolUpdated: (t: Tool) => tool.setCurrentTool(t),\n    onSelectedBuildingBlock: (bb) =>\n      tool.setDetails(BuildingBlockFigureId(bb.id)),\n    placeDependencyRule,\n    tool: () => tool.currentTool,\n  });\n\n  const queryBuildingBlocks = createQueryBuildingBlocks(\n    figures.buildingBlockFigures\n  );\n\n  const updateBuildingBlock = createUpdateBuildingBlock(\n    { onBuildingBlocks: figures.setBuildingBlockFigures },\n    figures.buildingBlockFigures\n  );\n\n  const updateFeatureType = createUpdateFeatureType({\n    onFeatures: (x) => figures.setFeatureTypeFigures(x),\n    featureTypes: () => figures.featureTypeFigures,\n  });\n\n  const convertToJson = createConvertToFeatureLint({\n    buildingBlocks: () => figures.buildingBlockFigures,\n    dependencyRules: () => figures.rules,\n    featureTypes: () => figures.featureTypeFigures,\n    onConfig: (cfg) => alert(JSON.stringify(cfg)),\n  });\n\n  return (\n    <Plane>\n      <TopBar convertToJson={convertToJson} />\n      <ToolBar tool={tool} selectTool={selectToolInteraction} />\n      <DrawingPlane\n        updateBuildingBlock={updateBuildingBlock}\n        updateFeatureType={updateFeatureType}\n        queryBuildingBlocks={queryBuildingBlocks}\n        placeFeature={placeFeature}\n        placeBuildingBlock={placeBuildingBlock}\n        selectRule={toolBuildingBlockInteraction}\n        tool={tool}\n        figures={figures}\n      />\n      {tool.details ? (\n        <Details\n          query={queryBuildingBlocks}\n          onClose={closeSelection}\n          buildingBlockId={tool.details}\n        />\n      ) : null}\n    </Plane>\n  );\n};\n\nconst Plane = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n","import {\n  BuildingBlockFigure,\n  BuildingBlockFigureId,\n} from \"../models/editor-core/BuildingBlockFigure\";\n\nexport const createQueryBuildingBlocks = (bb: BuildingBlockFigure[]) => {\n  return {\n    buildingBlockById: (id: BuildingBlockFigureId) =>\n      bb.find((x) => x.id === id),\n  };\n};\nexport type QueryBuildingBlocks = ReturnType<typeof createQueryBuildingBlocks>;\n","import { useState } from \"react\";\n\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { BuildingBlockFigure } from \"../../domain-editor/models/editor-core/BuildingBlockFigure\";\nimport { DependencyRuleFigure } from \"../../domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure\";\n\nexport const useDrawingState = () => {\n  const [featureTypeFigures, setFeatureTypeFigures] = useState<\n    FeatureTypeFigure[]\n  >([]);\n  const [buildingBlockFigures, setBuildingBlockFigures] = useState<\n    BuildingBlockFigure[]\n  >([]);\n  const [rules, setRules] = useState<DependencyRuleFigure[]>([]);\n\n  return {\n    featureTypeFigures,\n    setFeatureTypeFigures,\n    buildingBlockFigures,\n    setBuildingBlockFigures,\n    rules,\n    setRules,\n  };\n};\n\nexport type Figures = ReturnType<typeof useDrawingState>;\n","import { useState } from \"react\";\nimport { Tool } from \"../../domain-editor/models/editor-core/Tool\";\nimport { RuleGhost } from \"../../domain-editor/models/editor-core/RuleGhost\";\nimport { BuildingBlockFigureId } from \"../../domain-editor/models/editor-core/BuildingBlockFigure\";\n\nexport const useToolState = () => {\n  const [currentTool, setCurrentTool] = useState<Tool>(\n    Tool({ type: \"SELECTION\" })\n  );\n  const [ruleGhost, setRuleGhost] = useState<RuleGhost | null>(null);\n  const [details, setDetails] = useState<BuildingBlockFigureId | null>(null);\n\n  return {\n    currentTool,\n    setCurrentTool,\n    ruleGhost,\n    setRuleGhost,\n    details,\n    setDetails,\n  };\n};\n\nexport type ToolState = ReturnType<typeof useToolState>;\n","import {\n  BuildingBlockFigure,\n  NewBuildingBlockFigureId,\n} from \"../models/editor-core/BuildingBlockFigure\";\n\ntype Listener = {\n  buildingBlocks: () => BuildingBlockFigure[];\n  onBuildingBlocksUpdated: (bb: BuildingBlockFigure[]) => any;\n};\nexport const createPlaceBuildingBlock =\n  ({ onBuildingBlocksUpdated, buildingBlocks }: Listener) =>\n  (x: number, y: number) => {\n    const created = BuildingBlockFigure({\n      id: NewBuildingBlockFigureId(),\n      type: \"BuildingBlockFigure\",\n      width: 50 * 2,\n      height: 50,\n      x: x,\n      y: y,\n      bbName: \"unamed\",\n    });\n    const updatedBbs = [...buildingBlocks(), created];\n    onBuildingBlocksUpdated(updatedBbs);\n  };\n\nexport type PlaceBuildingblock = ReturnType<typeof createPlaceBuildingBlock>;\n","import { BuildingBlockFigure } from \"../models/editor-core/BuildingBlockFigure\";\nimport { DependencyRuleFigure } from \"../models/editor-core/dependency-rule/DependencyRuleFigure\";\nimport { NewDependencyRuleFigureId } from \"../models/editor-core/dependency-rule/DependencyRuleFigureId\";\n\ntype Listener = {\n  onRules: (r: DependencyRuleFigure[]) => any;\n  buildingBlocks: () => BuildingBlockFigure[];\n  rules: () => DependencyRuleFigure[];\n};\nexport const createPlaceDependencyRule =\n  ({ onRules, buildingBlocks, rules }: Listener) =>\n  (startBB: BuildingBlockFigure, endBB: BuildingBlockFigure) => {\n    const start = buildingBlocks().find((b) => b.id === startBB.id);\n    const end = buildingBlocks().find((b) => b.id === endBB.id);\n\n    if (!start || !end) {\n      return;\n    }\n\n    const newRules = [\n      ...rules(),\n      DependencyRuleFigure({\n        id: NewDependencyRuleFigureId(),\n        from: start.id,\n        to: end.id,\n      }),\n    ];\n    onRules(newRules);\n  };\n\nexport type PlaceDependencyRule = ReturnType<typeof createPlaceDependencyRule>;\n","import { Tool } from \"../models/editor-core/Tool\";\nimport { BuildingBlockFigure } from \"../models/editor-core/BuildingBlockFigure\";\n\ntype Listener = {\n  tool: () => Tool;\n  onDetails: (x: BuildingBlockFigure | null) => any;\n};\nexport const createCloseSelection =\n  ({ tool, onDetails }: Listener) =>\n  () => {\n    const current = tool();\n    if (current.type === \"SELECTION\") {\n      onDetails(null);\n    }\n  };\n\nexport type CloseSelection = ReturnType<typeof createCloseSelection>;\n","import { isFirstSelection, RuleTool } from \"../models/editor-core/RuleTool\";\nimport { Tool } from \"../models/editor-core/Tool\";\nimport { BuildingBlockFigure } from \"../models/editor-core/BuildingBlockFigure\";\nimport { PlaceDependencyRule } from \"./place-dependency-rule\";\n\ntype Listener = {\n  onToolUpdated: (t: Tool) => any;\n  onSelectedBuildingBlock: (bb: BuildingBlockFigure) => any;\n  placeDependencyRule: PlaceDependencyRule;\n  tool: () => Tool;\n};\nexport const createSelectBuildingBlockForRule =\n  ({\n    onToolUpdated,\n    placeDependencyRule,\n    tool,\n    onSelectedBuildingBlock,\n  }: Listener) =>\n  (bb: BuildingBlockFigure) => {\n    const currentTool = tool();\n\n    if (currentTool.type === \"SELECTION\") {\n      onSelectedBuildingBlock(bb);\n      return;\n    }\n\n    if (currentTool.type === \"PLACE_RULE\") {\n      const tool: RuleTool = RuleTool(currentTool);\n      const firstSelection = isFirstSelection(tool);\n      if (firstSelection) {\n        const updatedTool = Tool({ ...currentTool, from: bb });\n        onToolUpdated(updatedTool);\n      } else {\n        if (currentTool.from === null) {\n          throw new Error(\"Invalid state\");\n        }\n        placeDependencyRule(BuildingBlockFigure(currentTool.from), bb);\n        onToolUpdated(Tool({ type: \"SELECTION\" }));\n      }\n    }\n  };\n","import { DependencyRuleFigure } from \"../../domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure\";\nimport { BuildingBlockFigure } from \"../../domain-editor/models/editor-core/BuildingBlockFigure\";\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport {\n  GeometryRect,\n  intersectRect,\n  toGeometryRect,\n} from \"../../domain-editor/models/editor-core/figure/geometry\";\n\ntype StateDeps = {\n  dependencyRules: () => DependencyRuleFigure[];\n  buildingBlocks: () => BuildingBlockFigure[];\n  featureTypes: () => FeatureTypeFigure[];\n  onConfig: (cfg: any) => any;\n};\n\nexport const createConvertToFeatureLint =\n  ({ dependencyRules, buildingBlocks, featureTypes, onConfig }: StateDeps) =>\n  () => {\n    const allFeatureTypes: { [featurName: string]: any } = {};\n    for (const f of featureTypes()) {\n      const featureRect: GeometryRect = toGeometryRect(f);\n      allFeatureTypes[f.name] = {};\n      for (const bb of buildingBlocks()) {\n        const bbRect: GeometryRect = toGeometryRect(bb);\n        if (intersectRect(bbRect, featureRect)) {\n          allFeatureTypes[f.name] = {\n            ...allFeatureTypes[f.name],\n            [bb.bbName]: {},\n          };\n        }\n      }\n    }\n    const created = {\n      $schema:\n        \"https://raw.githubusercontent.com/feature-lint/feature-lint/pages/schema/feature-lint-v0.0.15.schema.json\",\n      rootDir: \"./src/features\",\n      featureTypes: allFeatureTypes,\n    };\n    console.log(created);\n    onConfig(created);\n  };\nexport type ConvertToFeatureLintJson = ReturnType<\n  typeof createConvertToFeatureLint\n>;\n","import * as React from 'react';\nimport {EditorPlane} from \"../features/react-editor/wired/EditorPlane\";\n\ntype Props = {\n\n};\nexport const App = (props: Props) => {\n    return (\n        <EditorPlane />\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./appshell/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}