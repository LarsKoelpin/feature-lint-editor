{"version":3,"sources":["reportWebVitals.ts","features/domain-editor/models/editor-core/figure/Figure.ts","features/domain-editor/models/editor-core/building-block-figure/BuildingBlockFigure.ts","features/domain-editor/models/editor-core/RuleTool.ts","features/domain-editor/models/editor-core/Tool.ts","features/react-editor/components/hud/MenuEntry.tsx","features/react-editor/components/hud/ToolBar.tsx","features/domain-editor/models/editor-core/RuleGhost.ts","features/react-editor/components/getPos.ts","features/react-editor/components/figures/UIFeature.tsx","features/react-editor/components/figures/UIBuildingBlockFigure.tsx","features/domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigureId.ts","features/domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure.ts","features/react-editor/components/figures/getAnchor.ts","features/react-editor/components/figures/UIDependencyRule.tsx","features/react-editor/components/figures/UIRuleGhost.tsx","features/react-editor/components/DrawingPlane.tsx","features/react-editor/components/useWindowSize.ts","features/domain-editor/models/editor-core/dependency-rule/DependencyRuleFigureId.ts","features/domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure.ts","features/react-editor/components/figure-details/BuildingBlockDetails.tsx","features/react-editor/components/Details.tsx","features/domain-editor/models/editor-core/figure/geometry.ts","features/react-modal/components/Backdrop.tsx","features/react-modal/components/ModalFrame.tsx","features/react-modal/components/Modal.tsx","features/react-editor/components/hud/save-dialog/SaveDialog.tsx","features/react-editor/components/hud/TopBar.tsx","features/domain-editor/interactions/update-figure.ts","features/react-editor/wired/EditorPlane.tsx","features/domain-editor/interactions/query-figures.ts","features/react-editor/controllers/useDrawingState.ts","features/react-editor/controllers/useToolState.ts","features/domain-editor/interactions/place-buildingblock.ts","features/domain-editor/interactions/place-dependency-rule.ts","features/domain-editor/interactions/close-selection.ts","features/domain-editor/interactions/tool-interactions.ts","features/domain-converter/interactions/convertToFeatureLintJson.ts","appshell/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isBuildingBlock","f","type","FigureSchema","x","zod","positive","y","width","height","resizing","withPosition","bb","withResizing","rez","withSize","ID_SCHEMA","BuildingBlockFigureIdSchema","vod","refine","startsWith","BuildingBlockFigureId","create","BuildingBlockFigureSchema","id","bbName","extend","BuildingBlockFigure","RuleToolSchema","from","nullable","to","RuleTool","SelectionToolSchema","PlaceBuildingBlockSchema","PlaceFeatureTypeSchema","ToolSchema","Tool","MenuEntry","styled","button","props","active","ICON_SIZE","ToolBar","tool","selectTool","SidebarContainer","currentTool","onClick","path","mdiCursorDefault","size","color","mdiHexagon","mdiHexagonMultipleOutline","mdiRelationManyToOne","div","RuleGhost","endX","endY","getPos","e","screenPos","target","getStage","getPointerPosition","getElementPos","position","Error","UiFeature","figure","updateFigure","onSelect","useState","textEdit","setTextEdit","posInfo","setPosInfo","textNode","useRef","shapeRef","React","trRef","current","nodes","getLayer","batchDraw","rotateEnabled","ref","boundBoxFunc","oldBox","newBox","draggable","onDragMove","pos","updatePosition","onKeyDown","keyCode","console","log","node","scaleX","scaleY","updateShape","Math","max","onChange","updateFeatureTypeName","value","focus","style","background","name","preventDefault","listening","fill","wrap","align","verticalAlign","text","fontSize","onDblClick","event","textPosition","getAbsolutePosition","stageBox","currentTarget","container","getBoundingClientRect","areaPosition","left","top","onTransformEnd","strokeWidth","stroke","groupProps","padding","boxSizing","mdiCog","UiBuildingBlockFigure","offset","onDragEnd","updateBuildingBlockName","dashEnabled","dash","ID_START","FeatureTypeFigureIdSchema","FeatureTypeFigureId","FeatureTypeFigure","getHorizontalAnchorByNumber","startX","startWidth","endWidth","startLeft","startRight","midStart","endLeft","endCenter","abs","getHorizontalAnchor","start","end","getVerticalAnchorByNumber","startY","startHeight","endheight","startTop","startBot","endBot","getVerticalAnchor","UiDependencyRule","queryBuildingBlocks","rule","select","buildingBlockById","points","UiRuleGhost","toolState","ruleTool","ruleGhost","DrawingPlane","t","figures","onSelectFigure","window","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","Container","onMouseMove","setRuleGhost","oldGhost","clickListener","featureTypeFigures","map","buildingBlockFigures","rules","placeFeature","placeBuildingBlock","nanoid","DependencyRuleFigureIdSchema","DependencyRuleFigure","BuildingBlockDetails","onClose","Details","figureId","query","figureById","DetailsContainer","Headline","toGeometryRect","bottom","right","Backdrop","ModalFrame","Modal","ReactDOM","createPortal","children","document","getElementById","SaveDialog","close","display","flexDirection","border","overflow","contentEditable","TopBar","convertToJson","featureLintConfig","setShowDialog","TopContainer","JSON","stringify","mdiContentSave","createUpdateFigure","onBuildingBlocks","buildingBlocks","onFeatureTypes","featureTypes","allBuildingBlocks","allFeatureTypes","findOrThrowBuildingBlock","createFindOrThrowBuildingBlock","findOrThrowFeatureType","createFindOrThrowFeatureType","newName","b","result","R","old","withName","withBuildingBlockName","foundBuildingBlock","fti","found","feature","findIndex","EditorPlane","featureFigures","dependencyRules","setFeatureTypeFigures","setBuildingBlockFigures","setRules","useDrawingState","setCurrentTool","details","setDetails","useToolState","onBuildingBlocksUpdated","created","updatedBbs","createPlaceBuildingBlock","bbs","placeDependencyRule","onRules","startBB","endBB","find","r","newRules","createPlaceDependencyRule","closeSelection","onDetails","createCloseSelection","d","toolBuildingBlockInteraction","onToolUpdated","onSelectedFigure","onSpawnTransform","source","updatedTool","createSelectBuildingBlockForRule","maybeBb","maybeFeature","big","small","featureRect","depCriteria","allowedImport","bb1","bb2","criteria","$schema","rootDir","createConvertToFeatureLint","Plane","App","render","StrictMode"],"mappings":"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","file":"static/js/main.e84080e2.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { DependencyRuleFigure } from \"../dependency-rule/DependencyRuleFigure\";\nimport { FeatureTypeFigure } from \"../feature-type-figure/FeatureTypeFigure\";\nimport { BuildingBlockFigure } from \"../building-block-figure/BuildingBlockFigure\";\nimport * as zod from \"zod\";\n\nexport type Figure =\n  | DependencyRuleFigure\n  | FeatureTypeFigure\n  | BuildingBlockFigure;\n\nexport const isBuildingBlock = (f: Figure): f is BuildingBlockFigure => {\n  return (f as any)?.type === \"BuildingBlockFigure\";\n};\n\nexport const isFeatureType = (f: Figure): f is FeatureTypeFigure => {\n  return (f as any)?.type === \"FeatureTypeFigure\";\n};\n\nexport const FigureSchema = {\n  x: zod.number().positive(),\n  y: zod.number().positive(),\n  width: zod.number().positive(),\n  height: zod.number().positive(),\n  resizing: zod.boolean(),\n};\n\nexport const withPosition = <T extends Figure>(x: number, y: number, bb: T) => {\n  return { ...bb, x, y };\n};\n\nexport const withResizing = <T extends Figure>(rez: boolean, bb: T): T => {\n  if (isBuildingBlock(bb)) {\n    return { ...bb, resizing: rez };\n  }\n  if (isFeatureType(bb)) {\n    return { ...bb, resizing: rez };\n  }\n  return bb;\n};\n\nexport const withSize = <T extends Figure>(\n  width: number,\n  height: number,\n  bb: T\n) => {\n  return { ...bb, width, height };\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { nanoid } from \"nanoid\";\nimport { FigureSchema } from \"../figure/Figure\";\n\nconst ID_SCHEMA = \"urn:building-block-figure:\";\nexport const BuildingBlockFigureIdSchema = vod(\n  \"BuildingBlockFigureId\",\n  zod.string().refine((x) => x.startsWith(ID_SCHEMA))\n);\nexport type BuildingBlockFigureId = zod.infer<\n  typeof BuildingBlockFigureIdSchema\n>;\nexport const BuildingBlockFigureId = BuildingBlockFigureIdSchema.create;\n\nexport const NewBuildingBlockFigureId = () =>\n  BuildingBlockFigureIdSchema.create(ID_SCHEMA + nanoid());\n\nexport const BuildingBlockFigureSchema = vod(\n  \"BuildingBlockFigure\",\n  zod\n    .object({\n      id: BuildingBlockFigureIdSchema,\n      bbName: zod.string(),\n      type: zod.literal(\"BuildingBlockFigure\"),\n    })\n    .extend(FigureSchema)\n);\n\nexport type BuildingBlockFigure = zod.infer<typeof BuildingBlockFigureSchema>;\nexport const BuildingBlockFigure = BuildingBlockFigureSchema.create;\n\nexport const withBuildingBlockName = (\n  name: string,\n  bb: BuildingBlockFigure\n) => {\n  return { ...bb, bbName: name };\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { BuildingBlockFigureSchema } from \"./building-block-figure/BuildingBlockFigure\";\nimport { Tool } from \"./Tool\";\n\nexport const RuleToolSchema = vod(\n  \"RuleTool\",\n  zod.object({\n    type: zod.literal(\"PLACE_RULE\"),\n    from: BuildingBlockFigureSchema.nullable(),\n    to: BuildingBlockFigureSchema.nullable(),\n  })\n);\nexport type RuleTool = zod.infer<typeof RuleToolSchema>;\nexport const RuleTool = RuleToolSchema.create;\n\nexport const isFirstSelection = (t: RuleTool) => {\n  return t.from === null;\n};\n\nexport const isWaitingForSecondSelection = (t: Tool): t is RuleTool => {\n  return t.type === \"PLACE_RULE\" && t.from !== null;\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { RuleTool, RuleToolSchema } from \"./RuleTool\";\n\nexport const SelectionToolSchema = vod(\n  \"Visual-Selection\",\n  zod.object({\n    type: zod.literal(\"SELECTION\"),\n  })\n);\nexport const PlaceBuildingBlockSchema = vod(\n  \"Visual-BB\",\n  zod.object({\n    type: zod.literal(\"PLACE_BUILDING_BLOCK\"),\n  })\n);\nexport const PlaceFeatureTypeSchema = vod(\n  \"Visual-Feature\",\n  zod.object({\n    type: zod.literal(\"PLACE_FEATURE\"),\n  })\n);\n\nexport const ToolSchema = vod(\n  \"Tool\",\n  zod.union([\n    SelectionToolSchema,\n    PlaceBuildingBlockSchema,\n    PlaceFeatureTypeSchema,\n    RuleToolSchema,\n  ])\n);\n\nexport const VisualBuildingBlock = PlaceBuildingBlockSchema.create;\nexport const SelectionTool = SelectionToolSchema.create;\nexport const Tool = ToolSchema.create;\nexport type Tool = zod.infer<typeof ToolSchema> | RuleTool;\n","import styled from \"styled-components\";\n\nexport const MenuEntry = styled.button<{ active: boolean }>`\n  padding: 8px;\n  font-size: 12px;\n  outline: none;\n  border: 0;\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  background: ${(props) => {\n    if (props.active) {\n      return \"#f6f6f6\";\n    }\n    return \"transparent\";\n  }};\n  &:hover {\n    background: ${(props) => {\n      if (props.active) {\n        return \"#f6f6f6\";\n      }\n      return \"#ececec\";\n    }};\n    cursor: pointer;\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@mdi/react\";\nimport {\n  mdiCursorDefault,\n  mdiHexagon,\n  mdiHexagonMultipleOutline,\n  mdiRelationManyToOne,\n} from \"@mdi/js\";\nimport { ToolState } from \"../../controllers/useToolState\";\nimport { Tool } from \"../../../domain-editor/models/editor-core/Tool\";\nimport { MenuEntry } from \"./MenuEntry\";\n\ntype Props = {\n  tool: ToolState;\n  selectTool: (t: Tool) => any;\n};\nconst ICON_SIZE = 1.1;\nexport const ToolBar = ({ tool, selectTool }: Props) => {\n  return (\n    <SidebarContainer>\n      <MenuEntry\n        active={tool.currentTool.type === \"SELECTION\"}\n        onClick={() => selectTool(Tool({ type: \"SELECTION\" }))}\n      >\n        <Icon path={mdiCursorDefault} size={ICON_SIZE} color=\"grey\" />\n        Select\n      </MenuEntry>\n      <MenuEntry\n        active={tool.currentTool.type === \"PLACE_FEATURE\"}\n        onClick={() => selectTool(Tool({ type: \"PLACE_FEATURE\" }))}\n      >\n        <Icon path={mdiHexagon} size={ICON_SIZE} color=\"grey\" />\n        Feature\n      </MenuEntry>\n      <MenuEntry\n        active={tool.currentTool.type === \"PLACE_BUILDING_BLOCK\"}\n        onClick={() => selectTool(Tool({ type: \"PLACE_BUILDING_BLOCK\" }))}\n      >\n        <Icon path={mdiHexagonMultipleOutline} size={ICON_SIZE} color=\"grey\" />\n        Building Block\n      </MenuEntry>\n      <MenuEntry\n        active={tool.currentTool.type === \"PLACE_RULE\"}\n        onClick={() =>\n          selectTool(Tool({ type: \"PLACE_RULE\", from: null, to: null }))\n        }\n      >\n        <Icon path={mdiRelationManyToOne} size={ICON_SIZE} color=\"grey\" />\n        Allow Import\n      </MenuEntry>\n    </SidebarContainer>\n  );\n};\n\nconst SidebarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: centeR;\n  justify-content: flex-start;\n  left: 8px;\n  top: 30%;\n  position: absolute;\n  width: 64px;\n  background: white;\n  z-index: 99999;\n  border-radius: 5px;\n\n  -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n`;\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\n\nexport const RuleGhostSchema = vod(\n  \"RuleGhost\",\n  zod.object({\n    endX: zod.number(),\n    endY: zod.number(),\n  })\n);\nexport type RuleGhost = zod.infer<typeof RuleGhostSchema>;\nexport const RuleGhost = RuleGhostSchema.create;\n","import { KonvaEventObject } from \"konva/lib/Node\";\n\nexport const getPos = (e: KonvaEventObject<any>): { x: number; y: number } => {\n  const screenPos = e.target.getStage()?.getPointerPosition();\n  if (screenPos?.x && screenPos.y) {\n    return screenPos;\n  }\n  return { x: 0, y: 0 };\n};\n\nexport const getElementPos = (\n  e: KonvaEventObject<any>\n): { x: number; y: number } => {\n  const screenPos = e.target.position();\n  if (screenPos?.x && screenPos.y) {\n    return screenPos;\n  }\n  throw new Error(\"No element pos possible\");\n};\n","import * as React from \"react\";\nimport { Group, Rect, Text, Transformer } from \"react-konva\";\nimport { FeatureTypeFigure } from \"../../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { getElementPos } from \"../getPos\";\nimport { Html } from \"react-konva-utils\";\nimport { useRef, useState } from \"react\";\nimport { mdiCog } from \"@mdi/js\";\nimport Icon from \"@mdi/react\";\nimport { UpdateFigure } from \"../../../domain-editor/interactions/update-figure\";\nimport { SelectionAction } from \"../../../domain-editor/interactions/tool-interactions\";\n\ntype Props = {\n  figure: FeatureTypeFigure;\n  onSelect: SelectionAction;\n  updateFigure: UpdateFigure;\n};\nexport const UiFeature = ({ figure, updateFigure, onSelect }: Props) => {\n  const [textEdit, setTextEdit] = useState<boolean>(false);\n  const [posInfo, setPosInfo] = useState<any>({});\n  const textNode = useRef<any>();\n\n  const height = figure.height;\n  const width = figure.width;\n\n  const iconSize = 42;\n\n  const shapeRef = React.useRef();\n  const trRef = React.useRef<any>();\n\n  const resizing = figure.resizing;\n  React.useEffect(() => {\n    if (resizing) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [resizing]);\n\n  return (\n    <>\n      {figure.resizing && (\n        <Transformer\n          rotateEnabled={false}\n          ref={trRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n      <Group\n        draggable={true}\n        onDragMove={(e) => {\n          const pos = getElementPos(e);\n          updateFigure.updatePosition(figure, pos.x, pos.y);\n        }}\n      >\n        {textEdit ? (\n          <Html>\n            <textarea\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  setTextEdit(false);\n                  console.log(\"END FEAT TRANS\");\n                  const node: any = shapeRef.current;\n                  const scaleX = node!.scaleX();\n                  const scaleY = node!.scaleY();\n\n                  // we will reset it back\n                  node.scaleX(1);\n                  node.scaleY(1);\n                  updateFigure.updateShape(\n                    figure,\n                    Math.max(5, node.width() * scaleX),\n                    Math.max(node.height() * scaleY)\n                  );\n                }\n              }}\n              onChange={(e) => {\n                updateFigure.updateFeatureTypeName(figure, e.target.value);\n              }}\n              ref={(ref) => ref?.focus()}\n              style={{\n                background: \"red\",\n                position: \"absolute\",\n                ...posInfo,\n                height: height + \"px\",\n              }}\n            >\n              {figure.name}\n            </textarea>\n          </Html>\n        ) : null}\n        <Text\n          ref={textNode as any}\n          preventDefault={true}\n          listening={false}\n          fill={\"black\"}\n          wrap={\"none\"}\n          align={\"center\"}\n          verticalAlign=\"middle\"\n          width={200}\n          height={50}\n          text={figure.name}\n          x={figure.x}\n          y={figure.y}\n          fontSize={20}\n        />\n        <Rect\n          onDblClick={(event) => {\n            setTextEdit(!textEdit);\n            const textPosition = textNode.current!.getAbsolutePosition();\n            const stage = event.currentTarget.getStage();\n            const stageBox = stage!.container().getBoundingClientRect();\n            const areaPosition = {\n              x: stageBox.left + textPosition.x,\n              y: stageBox.top + textPosition.y,\n            };\n            setPosInfo({\n              top: areaPosition.y + \"px\",\n              left: areaPosition.x + \"px\",\n              width: width + \"px\",\n            });\n          }}\n          onTransformEnd={() => {\n            console.log(\"END FEAT TRANS\");\n            const node: any = shapeRef.current;\n            const scaleX = node!.scaleX();\n            const scaleY = node!.scaleY();\n\n            // we will reset it back\n            node.scaleX(1);\n            node.scaleY(1);\n            updateFigure.updateShape(\n              figure,\n              Math.max(5, node.width() * scaleX),\n              Math.max(node.height() * scaleY)\n            );\n          }}\n          ref={shapeRef as any}\n          draggable\n          onClick={() => onSelect(figure, \"BLOCK\")}\n          x={figure.x}\n          y={figure.y}\n          height={height}\n          width={width}\n          strokeWidth={5}\n          stroke={\"black\"}\n        />\n      </Group>\n      <Html\n        groupProps={{\n          x: figure.x + figure.width - iconSize,\n          y: figure.y,\n          fill: \"red\",\n          width: iconSize,\n          height: iconSize,\n        }}\n      >\n        <div\n          style={{\n            width: iconSize,\n            height: iconSize,\n            padding: \"8px\",\n            boxSizing: \"border-box\",\n          }}\n          onClick={() => onSelect(figure, \"ICON\")}\n        >\n          <Icon path={mdiCog} size={1.2} />\n        </div>\n      </Html>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Text, Rect, Group, Transformer } from \"react-konva\";\nimport { Html } from \"react-konva-utils\";\nimport { BuildingBlockFigure } from \"../../../domain-editor/models/editor-core/building-block-figure/BuildingBlockFigure\";\nimport { getElementPos } from \"../getPos\";\nimport { useRef, useState } from \"react\";\nimport Icon from \"@mdi/react\";\nimport { mdiCog } from \"@mdi/js\";\nimport { UpdateFigure } from \"../../../domain-editor/interactions/update-figure\";\nimport { SelectionAction } from \"../../../domain-editor/interactions/tool-interactions\";\n\ntype Props = {\n  figure: BuildingBlockFigure;\n  onSelect: SelectionAction;\n  updateFigure: UpdateFigure;\n};\nexport const UiBuildingBlockFigure = ({\n  figure,\n  onSelect,\n  updateFigure,\n}: Props) => {\n  const [textEdit, setTextEdit] = useState<boolean>(false);\n  const [posInfo, setPosInfo] = useState<any>({});\n  const textNode = useRef<any>();\n  const width = figure.width;\n  const height = figure.height;\n\n  const iconSize = 42;\n  const fontSize = 20;\n  const offset = height / fontSize;\n  const color = textEdit ? \"green\" : \"black\";\n\n  const shapeRef = React.useRef();\n  const trRef = React.useRef<any>();\n\n  const resizing = figure.resizing;\n  React.useEffect(() => {\n    if (resizing) {\n      // we need to attach transformer manually\n      trRef.current.nodes([shapeRef.current]);\n      trRef.current.getLayer().batchDraw();\n    }\n  }, [resizing]);\n\n  return (\n    <>\n      {figure.resizing && (\n        <Transformer\n          rotateEnabled={false}\n          ref={trRef}\n          boundBoxFunc={(oldBox, newBox) => {\n            // limit resize\n            if (newBox.width < 5 || newBox.height < 5) {\n              return oldBox;\n            }\n            return newBox;\n          }}\n        />\n      )}\n      <Group\n        draggable={true}\n        onDragEnd={(e) => {\n          const pos = getElementPos(e);\n          updateFigure.updatePosition(figure, pos.x, pos.y);\n        }}\n        onDragMove={(e) => {\n          const pos = getElementPos(e);\n          updateFigure.updatePosition(figure, pos.x, pos.y);\n        }}\n        onClick={(e) => {\n          onSelect(figure, \"BLOCK\");\n        }}\n      >\n        {textEdit ? (\n          <Html>\n            <textarea\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  setTextEdit(false);\n                  console.log(\"ENTER\");\n                  const node: any = shapeRef.current;\n                  const scaleX = node!.scaleX();\n                  const scaleY = node!.scaleY();\n\n                  // we will reset it back\n                  node.scaleX(1);\n                  node.scaleY(1);\n                  updateFigure.updateShape(\n                    figure,\n                    Math.max(5, node.width() * scaleX),\n                    Math.max(node.height() * scaleY)\n                  );\n                }\n              }}\n              onChange={(e) => {\n                updateFigure.updateBuildingBlockName(figure, e.target.value);\n              }}\n              ref={(ref) => ref?.focus()}\n              style={{\n                background: \"red\",\n                position: \"absolute\",\n                ...posInfo,\n                height: height + \"px\",\n              }}\n            >\n              {figure.bbName}\n            </textarea>\n          </Html>\n        ) : null}\n        <Rect\n          onDblClick={(event) => {\n            setTextEdit(!textEdit);\n            const textPosition = textNode.current!.getAbsolutePosition();\n            const stage = event.currentTarget.getStage();\n            const stageBox = stage!.container().getBoundingClientRect();\n            const areaPosition = {\n              x: stageBox.left + textPosition.x,\n              y: stageBox.top + textPosition.y,\n            };\n            setPosInfo({\n              top: areaPosition.y + \"px\",\n              left: areaPosition.x + \"px\",\n              width: width + \"px\",\n            });\n          }}\n          onTransformEnd={() => {\n            console.log(\"END\");\n            const node: any = shapeRef.current;\n            const scaleX = node!.scaleX();\n            const scaleY = node!.scaleY();\n\n            // we will reset it back\n            node.scaleX(1);\n            node.scaleY(1);\n            updateFigure.updateShape(\n              figure,\n              Math.max(5, node.width() * scaleX),\n              Math.max(node.height() * scaleY)\n            );\n          }}\n          ref={shapeRef as any}\n          draggable\n          x={figure.x}\n          y={figure.y}\n          width={width}\n          height={height}\n          stroke={color}\n          dashEnabled={true}\n          dash={[1, 1]}\n          strokeWidth={3}\n        />\n        <Text\n          preventDefault={true}\n          ref={textNode as any}\n          listening={false}\n          fill={color}\n          wrap={\"none\"}\n          align={\"center\"}\n          verticalAlign=\"middle\"\n          width={width}\n          height={height}\n          text={figure.bbName}\n          x={figure.x}\n          y={figure.y + offset / 2}\n          fontSize={fontSize}\n        />\n      </Group>\n      <Html\n        groupProps={{\n          x: figure.x + figure.width - iconSize,\n          y: figure.y,\n          fill: \"red\",\n          width: iconSize,\n          height: iconSize,\n        }}\n      >\n        <div\n          style={{\n            width: iconSize,\n            height: iconSize,\n            padding: \"8px\",\n            boxSizing: \"border-box\",\n          }}\n          onClick={() => onSelect(figure, \"ICON\")}\n        >\n          <Icon path={mdiCog} size={1.2} />\n        </div>\n      </Html>\n    </>\n  );\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { nanoid } from \"nanoid\";\n\nconst ID_START = \"urn:feature-type:\";\nexport const FeatureTypeFigureIdSchema = vod(\n  \"FeatureTypeFigureId\",\n  zod.string().refine((x) => x.startsWith(ID_START))\n);\n\nexport type FeatureTypeFigureId = zod.infer<typeof FeatureTypeFigureIdSchema>;\nexport const FeatureTypeFigureId = FeatureTypeFigureIdSchema.create;\nexport const NewFeatureTypeFigureId = (): FeatureTypeFigureId =>\n  FeatureTypeFigureId(ID_START + nanoid());\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { FeatureTypeFigureIdSchema } from \"./FeatureTypeFigureId\";\nimport { FigureSchema } from \"../figure/Figure\";\n\nexport const FeatureTypeFigureSchema = vod(\n  \"FeatureTypeFigure\",\n  zod\n    .object({\n      id: FeatureTypeFigureIdSchema,\n      name: zod.string(),\n      type: zod.literal(\"FeatureTypeFigure\"),\n    })\n    .extend(FigureSchema)\n);\n\nexport type FeatureTypeFigure = zod.infer<typeof FeatureTypeFigureSchema>;\nexport const FeatureTypeFigure = FeatureTypeFigureSchema.create;\n\nexport const withName = (\n  name: string,\n  bb: FeatureTypeFigure\n): FeatureTypeFigure => {\n  return FeatureTypeFigure({ ...bb, name: name });\n};\n","import { FeatureTypeFigure } from \"../../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { BuildingBlockFigure } from \"../../../domain-editor/models/editor-core/building-block-figure/BuildingBlockFigure\";\n\nexport const getHorizontalAnchorByNumber = (\n  startX: number,\n  startWidth: number,\n  endX: number,\n  endWidth: number\n) => {\n  const startLeft = startX;\n  const startRight = startX + startWidth;\n\n  const midStart = startX + startWidth / 2;\n\n  const endLeft = endX;\n  const endCenter = endX + endWidth / 2;\n\n  if (Math.abs(midStart - endCenter) < startWidth / 2) {\n    return midStart;\n  }\n\n  const targetIsRightSided = endLeft > startRight;\n  if (targetIsRightSided) {\n    return startRight;\n  }\n  return startLeft;\n};\n\nexport const getHorizontalAnchor = (\n  start: FeatureTypeFigure | BuildingBlockFigure,\n  end: FeatureTypeFigure | BuildingBlockFigure\n) => {\n  return getHorizontalAnchorByNumber(start.x, start.width, end.x, end.width);\n};\n\nexport const getVerticalAnchorByNumber = (\n  startY: number,\n  startHeight: number,\n  endY: number,\n  endheight: number\n) => {\n  const startTop = startY;\n  const startBot = startY + startHeight;\n  const midStart = startY + startHeight / 2;\n\n  const endBot = endY - endheight;\n\n  if (Math.abs(midStart - endY) < startHeight) {\n    return midStart;\n  }\n\n  const targetIsTop = endBot < startTop;\n  if (targetIsTop) {\n    return startTop;\n  }\n  return startBot;\n};\n\nexport const getVerticalAnchor = (\n  start: FeatureTypeFigure | BuildingBlockFigure,\n  end: FeatureTypeFigure | BuildingBlockFigure\n) => {\n  return getVerticalAnchorByNumber(start.y, start.height, end.y, end.height);\n};\n","import * as React from \"react\";\nimport { Arrow } from \"react-konva\";\nimport { DependencyRuleFigure } from \"../../../domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure\";\nimport { QueryFigures } from \"../../../domain-editor/interactions/query-figures\";\nimport {\n  BuildingBlockFigure,\n  BuildingBlockFigureId,\n} from \"../../../domain-editor/models/editor-core/building-block-figure/BuildingBlockFigure\";\nimport { SelectionAction } from \"../../../domain-editor/interactions/tool-interactions\";\nimport { getHorizontalAnchor, getVerticalAnchor } from \"./getAnchor\";\n\ntype Props = {\n  rule: DependencyRuleFigure;\n  queryBuildingBlocks: QueryFigures;\n  select: SelectionAction;\n};\nexport const UiDependencyRule = ({\n  queryBuildingBlocks,\n  rule,\n  select,\n}: Props) => {\n  const from: BuildingBlockFigure = queryBuildingBlocks.buildingBlockById(\n    BuildingBlockFigureId(rule.from)\n  );\n  const to: BuildingBlockFigure = queryBuildingBlocks.buildingBlockById(\n    BuildingBlockFigureId(rule.to)\n  );\n\n  const startX = getHorizontalAnchor(from, to);\n  const startY = getVerticalAnchor(from, to);\n\n  const endX = getHorizontalAnchor(to, from);\n  const endY = getVerticalAnchor(to, from);\n\n  if (to && from) {\n    return (\n      <Arrow\n        dashEnabled={true}\n        dash={[10, 5]}\n        onClick={() => select(rule, \"ICON\")}\n        points={[startX, startY, endX, endY]}\n        stroke={\"black\"}\n        strokeWidth={2}\n      />\n    );\n  }\n  return null;\n};\n","import * as React from \"react\";\nimport { Arrow } from \"react-konva\";\nimport { RuleTool } from \"../../../domain-editor/models/editor-core/RuleTool\";\nimport { ToolState } from \"../../controllers/useToolState\";\nimport {\n  getHorizontalAnchorByNumber,\n  getVerticalAnchorByNumber,\n} from \"./getAnchor\";\n\ntype Props = {\n  ruleTool: RuleTool;\n  toolState: ToolState;\n};\nexport const UiRuleGhost = ({ toolState, ruleTool }: Props) => {\n  const currentTool = ruleTool;\n  const startX = getHorizontalAnchorByNumber(\n    currentTool.from!.x,\n    currentTool.from!.width,\n    toolState.ruleGhost!.endX,\n    0\n  );\n  const startY = getVerticalAnchorByNumber(\n    currentTool.from!.y,\n    currentTool.from!.height,\n    toolState.ruleGhost!.endY,\n    0\n  );\n  return (\n    <Arrow\n      listening={false}\n      points={[\n        startX,\n        startY,\n        toolState.ruleGhost!.endX,\n        toolState.ruleGhost!.endY,\n      ]}\n      strokeWidth={2}\n      stroke={\"black\"}\n    />\n  );\n};\n","import * as React from \"react\";\nimport { Layer, Rect, Stage } from \"react-konva\";\nimport { useWindowSize } from \"./useWindowSize\";\nimport { Figures } from \"../controllers/useDrawingState\";\n\nimport { ToolState } from \"../controllers/useToolState\";\nimport { RuleGhost } from \"../../domain-editor/models/editor-core/RuleGhost\";\nimport { getPos } from \"./getPos\";\nimport { UiFeature } from \"./figures/UIFeature\";\nimport { UiBuildingBlockFigure } from \"./figures/UIBuildingBlockFigure\";\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { QueryFigures } from \"../../domain-editor/interactions/query-figures\";\nimport { isWaitingForSecondSelection } from \"../../domain-editor/models/editor-core/RuleTool\";\nimport { UiDependencyRule } from \"./figures/UIDependencyRule\";\nimport { PlaceBuildingblock } from \"../../domain-editor/interactions/place-buildingblock\";\nimport styled from \"styled-components\";\nimport { NewFeatureTypeFigureId } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigureId\";\nimport { UpdateFigure } from \"../../domain-editor/interactions/update-figure\";\nimport { SelectionAction } from \"../../domain-editor/interactions/tool-interactions\";\nimport { UiRuleGhost } from \"./figures/UIRuleGhost\";\n\ntype Props = {\n  tool: ToolState;\n  figures: Figures;\n  placeFeature: (f: FeatureTypeFigure) => any;\n  queryBuildingBlocks: QueryFigures;\n  updateFigure: UpdateFigure;\n  placeBuildingBlock: PlaceBuildingblock;\n  onSelectFigure: SelectionAction;\n};\nexport const DrawingPlane = (props: Props) => {\n  const { figures, tool, updateFigure, onSelectFigure, queryBuildingBlocks } =\n    props;\n  const size = useWindowSize();\n\n  const { currentTool } = tool;\n\n  return (\n    <Container>\n      <Stage\n        height={size.height}\n        width={size.width}\n        onMouseMove={(e) => {\n          const screenPos = getPos(e);\n          tool.setRuleGhost((oldGhost) => {\n            return RuleGhost({\n              endX: screenPos.x,\n              endY: screenPos.y,\n            });\n          });\n        }}\n        onClick={(e) => {\n          const screenPos = getPos(e);\n          clickListener(props, { x: screenPos.x, y: screenPos.y });\n        }}\n      >\n        <Layer>\n          <Rect\n            listening={false}\n            x={0}\n            y={0}\n            width={size.width}\n            height={size.height}\n            fill={\"#fbfbfb\"}\n          />\n        </Layer>\n        <Layer>\n          {figures.featureTypeFigures.map((x) => (\n            <UiFeature\n              onSelect={onSelectFigure}\n              key={x.id}\n              figure={x}\n              updateFigure={updateFigure}\n            />\n          ))}\n          {figures.buildingBlockFigures.map((x) => (\n            <UiBuildingBlockFigure\n              key={x.id}\n              updateFigure={updateFigure}\n              figure={x}\n              onSelect={onSelectFigure}\n            />\n          ))}\n          {isWaitingForSecondSelection(currentTool) && tool.ruleGhost ? (\n            <UiRuleGhost ruleTool={currentTool} toolState={tool} />\n          ) : null}\n          {figures.rules.map((rule) => {\n            return (\n              <UiDependencyRule\n                select={onSelectFigure}\n                key={rule.id}\n                queryBuildingBlocks={queryBuildingBlocks}\n                rule={rule}\n              />\n            );\n          })}\n        </Layer>\n      </Stage>\n    </Container>\n  );\n};\n\nconst clickListener = (\n  { tool, placeFeature, placeBuildingBlock }: Props,\n  screenPos: { x: number; y: number }\n) => {\n  switch (tool.currentTool.type) {\n    case \"PLACE_FEATURE\":\n      placeFeature(\n        FeatureTypeFigure({\n          name: \"unnamed-feature\",\n          id: NewFeatureTypeFigureId(),\n          height: 500,\n          width: 500,\n          x: screenPos.x,\n          y: screenPos.y,\n          type: \"FeatureTypeFigure\",\n          resizing: false,\n        })\n      );\n      break;\n    case \"PLACE_BUILDING_BLOCK\":\n      placeBuildingBlock(screenPos.x, screenPos.y);\n      break;\n    default:\n      break;\n  }\n};\n\nconst Container = styled.div`\n  cursor: crosshair;\n`;\n","import { useState, useEffect } from \"react\";\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { nanoid } from \"nanoid\";\n\nconst ID_START = \"urn:dependency-rule:\";\nexport const DependencyRuleFigureIdSchema = vod(\n  \"DependencyRuleFigureId\",\n  zod.string().refine((x) => x.startsWith(ID_START))\n);\n\nexport type DependencyRuleFigureId = zod.infer<\n  typeof DependencyRuleFigureIdSchema\n>;\nexport const DependencyRuleFigureId = DependencyRuleFigureIdSchema.create;\nexport const NewDependencyRuleFigureId = () => ID_START + nanoid();\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { BuildingBlockFigureIdSchema } from \"../building-block-figure/BuildingBlockFigure\";\nimport { DependencyRuleFigureIdSchema } from \"./DependencyRuleFigureId\";\n\nexport const DependencyRuleFigureSchema = vod(\n  \"DependencyRuleFigure\",\n  zod.object({\n    type: zod.literal(\"DependencyRuleFigure\"),\n    id: DependencyRuleFigureIdSchema,\n    from: BuildingBlockFigureIdSchema,\n    to: BuildingBlockFigureIdSchema,\n  })\n);\nexport type DependencyRuleFigure = zod.infer<typeof DependencyRuleFigureSchema>;\nexport const DependencyRuleFigure = DependencyRuleFigureSchema.create;\n","import * as React from \"react\";\nimport { BuildingBlockFigure } from \"../../../domain-editor/models/editor-core/building-block-figure/BuildingBlockFigure\";\n\ntype Props = {\n  figure: BuildingBlockFigure;\n  onClose: () => any;\n};\nexport const BuildingBlockDetails = ({ figure, onClose }: Props) => {\n  return (\n    <div>\n      <h2>{figure.bbName}</h2>\n      {figure.id}\n      <button onClick={onClose}>Close</button>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { QueryFigures } from \"../../domain-editor/interactions/query-figures\";\nimport { BuildingBlockDetails } from \"./figure-details/BuildingBlockDetails\";\n\ntype Props = {\n  figureId: string;\n  query: QueryFigures;\n  onClose: () => any;\n};\nexport const Details = ({ figureId, query, onClose }: Props) => {\n  const figure = query.figureById(figureId);\n  if (!figure) {\n    return null;\n  }\n  return (\n    <DetailsContainer>\n      <Headline>\n        <h2>Details</h2>\n      </Headline>\n      {(() => {\n        switch (figure.type) {\n          case \"BuildingBlockFigure\":\n            return <BuildingBlockDetails figure={figure} onClose={onClose} />;\n          case \"FeatureTypeFigure\":\n            return (\n              <div>\n                Hello<button onClick={onClose}>Close</button>\n              </div>\n            );\n          case \"DependencyRuleFigure\":\n            return (\n              <div>\n                Dep Figure <button onClick={onClose}>Close</button>\n              </div>\n            );\n        }\n      })()}\n    </DetailsContainer>\n  );\n};\n\nconst Headline = styled.div`\n  padding: 8px;\n`;\n\nconst DetailsContainer = styled.div`\n  display: flex;\n  background: red;\n  flex-direction: column;\n  align-items: flex-star;\n  justify-content: flex-start;\n  right: 0;\n  top: 0;\n  height: 100%;\n  position: absolute;\n  width: 400px;\n  background: white;\n  z-index: 99999;\n  border-radius: 5px;\n\n  -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n`;\n","export type GeometryRect = {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n};\n\nexport const toGeometryRect = (f: {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}) => {\n  return {\n    top: f.y,\n    bottom: f.y + f.height,\n    left: f.x,\n    right: f.x + f.width,\n  };\n};\n\nexport const intersectRect = (\n  big: GeometryRect,\n  small: GeometryRect\n): boolean => {\n  return !(\n    small.left > big.right ||\n    small.right < big.left ||\n    small.top > big.bottom ||\n    small.bottom < big.top\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.5);\n  top: 0;\n  left: 0;\n  z-index: 999999999999999999;\n`;\n","import styled from \"styled-components\";\n\nexport const ModalFrame = styled.div`\n  width: 500px;\n  height: 500px;\n  background: white;\n`;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Backdrop } from \"./Backdrop\";\nimport { ModalFrame } from \"./ModalFrame\";\n\ntype Props = {\n  children: any;\n};\nexport const Modal = (props: Props) => {\n  return ReactDOM.createPortal(\n    <Backdrop>\n      <ModalFrame>{props.children}</ModalFrame>\n    </Backdrop>,\n    document.getElementById(\"portal\")!\n  );\n};\n","import * as React from \"react\";\nimport { Modal } from \"../../../../react-modal/components/Modal\";\n\ntype Props = {\n  text: string;\n  close: () => any;\n};\nexport const SaveDialog = ({ text, close }: Props) => {\n  return (\n    <Modal>\n      <div\n        style={{\n          padding: \"8px\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div>\n          <h2>Configuration export</h2>\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            border: \"1px solid black\",\n            overflow: \"scroll\",\n          }}\n          contentEditable={true}\n        >\n          {text}\n        </div>\n        <button onClick={() => close()}> Close</button>\n      </div>\n    </Modal>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { MenuEntry } from \"./MenuEntry\";\nimport Icon from \"@mdi/react\";\nimport { mdiContentSave } from \"@mdi/js\";\nimport { ConvertToFeatureLintJson } from \"../../../domain-converter/interactions/convertToFeatureLintJson\";\nimport { useState } from \"react\";\nimport { SaveDialog } from \"./save-dialog/SaveDialog\";\n\ntype Props = {\n  convertToJson: ConvertToFeatureLintJson;\n};\nexport const TopBar = ({ convertToJson }: Props) => {\n  const [featureLintConfig, setShowDialog] = useState<string>(\"\");\n  return (\n    <TopContainer>\n      {featureLintConfig ? (\n        <SaveDialog text={featureLintConfig} close={() => setShowDialog(\"\")} />\n      ) : null}\n      <MenuEntry\n        active={false}\n        onClick={() => {\n          setShowDialog(JSON.stringify(convertToJson()));\n        }}\n      >\n        <Icon path={mdiContentSave} size={1.1} color=\"grey\" />\n        Save\n      </MenuEntry>\n    </TopContainer>\n  );\n};\n\nconst TopContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  margin: 0 auto;\n  left: 50%;\n  top: 0;\n  position: absolute;\n  height: 64px;\n  min-width: 200px;\n  background: white;\n  z-index: 99999;\n  border-radius: 5px;\n\n  -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n`;\n","import {\n  BuildingBlockFigure,\n  BuildingBlockFigureId,\n  withBuildingBlockName,\n} from \"../models/editor-core/building-block-figure/BuildingBlockFigure\";\nimport * as R from \"ramda\";\nimport {\n  Figure,\n  withPosition,\n  withResizing,\n  withSize,\n} from \"../models/editor-core/figure/Figure\";\nimport {\n  FeatureTypeFigure,\n  withName,\n} from \"../models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { FeatureTypeFigureId } from \"../models/editor-core/feature-type-figure/FeatureTypeFigureId\";\n\ntype Listener = {\n  onBuildingBlocks: (bb: BuildingBlockFigure[]) => any;\n  onFeatureTypes: (bb: FeatureTypeFigure[]) => any;\n  buildingBlocks: () => BuildingBlockFigure[];\n  featureTypes: () => FeatureTypeFigure[];\n};\nexport const createUpdateFigure = ({\n  onBuildingBlocks,\n  buildingBlocks,\n  onFeatureTypes,\n  featureTypes,\n}: Listener) => {\n  const allBuildingBlocks = buildingBlocks();\n  const allFeatureTypes = featureTypes();\n\n  const findOrThrowBuildingBlock =\n    createFindOrThrowBuildingBlock(allBuildingBlocks);\n  const findOrThrowFeatureType = createFindOrThrowFeatureType(allFeatureTypes);\n  return {\n    updateFeatureTypeName: (bb: FeatureTypeFigure, newName: string) => {\n      const b = findOrThrowFeatureType(FeatureTypeFigureId(bb.id));\n      const result = R.adjust(\n        b,\n        (old) => withName(newName, old),\n        allFeatureTypes\n      );\n      onFeatureTypes(result);\n      return result;\n    },\n    updateBuildingBlockName: (bb: BuildingBlockFigure, newName: string) => {\n      const b = findOrThrowBuildingBlock(BuildingBlockFigureId(bb.id));\n      const result = R.adjust(\n        b,\n        (old) => BuildingBlockFigure(withBuildingBlockName(newName, old)),\n        allBuildingBlocks\n      );\n      onBuildingBlocks(result);\n      return result;\n    },\n    updateShape: (bb: Figure, width: number, height: number) => {\n      switch (bb.type) {\n        case \"BuildingBlockFigure\":\n          const foundBuildingBlock = findOrThrowBuildingBlock(\n            BuildingBlockFigureId(bb.id)\n          );\n          const result = R.adjust(\n            foundBuildingBlock,\n            (old) => {\n              return withResizing(false, withSize(width, height, old));\n            },\n            allBuildingBlocks\n          );\n          onBuildingBlocks(result);\n          break;\n        case \"DependencyRuleFigure\":\n          break;\n        case \"FeatureTypeFigure\": {\n          const fti = findOrThrowFeatureType(FeatureTypeFigureId(bb.id));\n          onFeatureTypes(\n            R.adjust(\n              fti,\n              (old) => withResizing(false, withSize(width, height, old)),\n              allFeatureTypes\n            )\n          );\n\n          break;\n        }\n      }\n    },\n    resizing: (resizing: boolean, bb: Figure) => {\n      switch (bb.type) {\n        case \"BuildingBlockFigure\": {\n          const found = findOrThrowBuildingBlock(BuildingBlockFigureId(bb.id));\n          const result = R.adjust(\n            found,\n            (old) => withResizing(resizing, old),\n            allBuildingBlocks\n          );\n          onBuildingBlocks(result);\n          break;\n        }\n        case \"DependencyRuleFigure\":\n          break;\n        case \"FeatureTypeFigure\": {\n          const found = findOrThrowFeatureType(FeatureTypeFigureId(bb.id));\n          const result = R.adjust(\n            found,\n            (old) => withResizing(resizing, old),\n            allFeatureTypes\n          );\n          onFeatureTypes(result);\n          break;\n        }\n      }\n    },\n    updatePosition: (bb: Figure, x: number, y: number): void => {\n      switch (bb.type) {\n        case \"FeatureTypeFigure\":\n          const feature = findOrThrowFeatureType(FeatureTypeFigureId(bb.id));\n          onFeatureTypes(\n            R.adjust(\n              feature,\n              (old) => {\n                return withPosition(x, y, old);\n              },\n              allFeatureTypes\n            )\n          );\n          break;\n        case \"DependencyRuleFigure\":\n          break;\n        case \"BuildingBlockFigure\":\n          const b = findOrThrowBuildingBlock(BuildingBlockFigureId(bb.id));\n          const result = R.adjust(\n            b,\n            (old) => withPosition(x, y, old),\n            allBuildingBlocks\n          );\n          onBuildingBlocks(result);\n          break;\n      }\n    },\n  };\n};\n\nconst createFindOrThrowBuildingBlock =\n  (bb: BuildingBlockFigure[]) => (id: BuildingBlockFigureId) => {\n    const f = bb.findIndex((x) => x.id === id);\n    if (f !== -1) {\n      return f;\n    }\n    throw new Error(\"Cannot find bb\");\n  };\n\nconst createFindOrThrowFeatureType =\n  (bb: FeatureTypeFigure[]) => (id: FeatureTypeFigureId) => {\n    const f = bb.findIndex((x) => x.id === id);\n    if (f !== -1) {\n      return f;\n    }\n    throw new Error(\"Cannot find bb\");\n  };\n\nexport type UpdateFigure = ReturnType<typeof createUpdateFigure>;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { ToolBar } from \"../components/hud/ToolBar\";\nimport { DrawingPlane } from \"../components/DrawingPlane\";\nimport { useToolState } from \"../controllers/useToolState\";\nimport { Tool } from \"../../domain-editor/models/editor-core/Tool\";\nimport { useDrawingState } from \"../controllers/useDrawingState\";\n\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { createQueryFigures } from \"../../domain-editor/interactions/query-figures\";\nimport { createPlaceDependencyRule } from \"../../domain-editor/interactions/place-dependency-rule\";\nimport { createPlaceBuildingBlock } from \"../../domain-editor/interactions/place-buildingblock\";\nimport { Details } from \"../components/Details\";\nimport { createCloseSelection } from \"../../domain-editor/interactions/close-selection\";\nimport { createConvertToFeatureLint } from \"../../domain-converter/interactions/convertToFeatureLintJson\";\nimport { TopBar } from \"../components/hud/TopBar\";\nimport { createUpdateFigure } from \"../../domain-editor/interactions/update-figure\";\nimport { createSelectBuildingBlockForRule } from \"../../domain-editor/interactions/tool-interactions\";\n\ntype Props = {};\nexport const EditorPlane = (props: Props) => {\n  const figures = useDrawingState();\n  const tool = useToolState();\n\n  const selectToolInteraction = (t: Tool) => tool.setCurrentTool(t);\n  const placeFeature = (f: FeatureTypeFigure) => {\n    figures.setFeatureTypeFigures((old) => [...old, f]);\n    tool.setCurrentTool(Tool({ type: \"SELECTION\" }));\n  };\n\n  const placeBuildingBlock = createPlaceBuildingBlock({\n    onBuildingBlocksUpdated: (bbs) => {\n      figures.setBuildingBlockFigures(bbs);\n      tool.setCurrentTool(Tool({ type: \"SELECTION\" }));\n    },\n    buildingBlocks: () => figures.buildingBlockFigures,\n  });\n\n  const placeDependencyRule = createPlaceDependencyRule({\n    onRules: (r) => figures.setRules(r),\n    buildingBlocks: () => figures.buildingBlockFigures,\n    rules: () => figures.rules,\n  });\n\n  const closeSelection = createCloseSelection({\n    tool: () => tool.currentTool,\n    onDetails: (d) => tool.setDetails(d?.id || null),\n  });\n\n  const updateFigure = createUpdateFigure({\n    onBuildingBlocks: figures.setBuildingBlockFigures,\n    featureTypes: () => figures.featureTypeFigures,\n    buildingBlocks: () => figures.buildingBlockFigures,\n    onFeatureTypes: figures.setFeatureTypeFigures,\n  });\n\n  const toolBuildingBlockInteraction = createSelectBuildingBlockForRule({\n    onToolUpdated: (t: Tool) => tool.setCurrentTool(t),\n    onSelectedFigure: (bb) => tool.setDetails(bb?.id || null),\n    placeDependencyRule,\n    tool: () => tool.currentTool,\n    onSpawnTransform: (f) => updateFigure.resizing(true, f),\n  });\n\n  const queryBuildingBlocks = createQueryFigures(\n    figures.buildingBlockFigures,\n    figures.featureTypeFigures,\n    figures.rules\n  );\n\n  const convertToJson = createConvertToFeatureLint({\n    query: queryBuildingBlocks,\n    buildingBlocks: () => figures.buildingBlockFigures,\n    dependencyRules: () => figures.rules,\n    featureTypes: () => figures.featureTypeFigures,\n  });\n\n  return (\n    <Plane>\n      <TopBar convertToJson={convertToJson} />\n      <ToolBar tool={tool} selectTool={selectToolInteraction} />\n      <DrawingPlane\n        updateFigure={updateFigure}\n        queryBuildingBlocks={queryBuildingBlocks}\n        placeFeature={placeFeature}\n        placeBuildingBlock={placeBuildingBlock}\n        onSelectFigure={toolBuildingBlockInteraction}\n        tool={tool}\n        figures={figures}\n      />\n      {tool.details ? (\n        <Details\n          query={queryBuildingBlocks}\n          onClose={closeSelection}\n          figureId={tool.details}\n        />\n      ) : null}\n    </Plane>\n  );\n};\n\nconst Plane = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n","import {\n  BuildingBlockFigure,\n  BuildingBlockFigureId,\n} from \"../models/editor-core/building-block-figure/BuildingBlockFigure\";\nimport { FeatureTypeFigure } from \"../models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { DependencyRuleFigure } from \"../models/editor-core/dependency-rule/DependencyRuleFigure\";\n\nexport const createQueryFigures = (\n  bb: BuildingBlockFigure[],\n  featureFigures: FeatureTypeFigure[],\n  dependencyRules: DependencyRuleFigure[]\n) => {\n  return {\n    figureById: (id: string) => {\n      // TODO LKO: Watch URN first to get the correct array\n      const maybeBb = bb.find((x) => x.id === id);\n      if (maybeBb) {\n        return maybeBb;\n      }\n      const maybeFeature = featureFigures.find((x) => x.id === id);\n      if (maybeFeature) {\n        return maybeFeature;\n      }\n\n      const maybeRule = dependencyRules.find((x) => x.id === id);\n      if (maybeRule) {\n        return maybeRule;\n      }\n      return null;\n    },\n    buildingBlockById: (id: BuildingBlockFigureId) => {\n      const found = bb.find((b) => b.id === id);\n      if (!found) {\n        throw new Error(\n          \"Did not found BB with id \" + id + \" but is expected in state\"\n        );\n      }\n      return found;\n    },\n  };\n};\nexport type QueryFigures = ReturnType<typeof createQueryFigures>;\n","import { useState } from \"react\";\n\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { BuildingBlockFigure } from \"../../domain-editor/models/editor-core/building-block-figure/BuildingBlockFigure\";\nimport { DependencyRuleFigure } from \"../../domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure\";\n\nexport const useDrawingState = () => {\n  const [featureTypeFigures, setFeatureTypeFigures] = useState<\n    FeatureTypeFigure[]\n  >([]);\n  const [buildingBlockFigures, setBuildingBlockFigures] = useState<\n    BuildingBlockFigure[]\n  >([]);\n  const [rules, setRules] = useState<DependencyRuleFigure[]>([]);\n\n  return {\n    featureTypeFigures,\n    setFeatureTypeFigures,\n    buildingBlockFigures,\n    setBuildingBlockFigures,\n    rules,\n    setRules,\n  };\n};\n\nexport type Figures = ReturnType<typeof useDrawingState>;\n","import { useState } from \"react\";\nimport { Tool } from \"../../domain-editor/models/editor-core/Tool\";\nimport { RuleGhost } from \"../../domain-editor/models/editor-core/RuleGhost\";\n\nexport const useToolState = () => {\n  const [currentTool, setCurrentTool] = useState<Tool>(\n    Tool({ type: \"SELECTION\" })\n  );\n  const [ruleGhost, setRuleGhost] = useState<RuleGhost | null>(null);\n  const [details, setDetails] = useState<string | null>(null);\n\n  return {\n    currentTool,\n    setCurrentTool,\n    ruleGhost,\n    setRuleGhost,\n    details,\n    setDetails,\n  };\n};\n\nexport type ToolState = ReturnType<typeof useToolState>;\n","import {\n  BuildingBlockFigure,\n  NewBuildingBlockFigureId,\n} from \"../models/editor-core/building-block-figure/BuildingBlockFigure\";\n\ntype Listener = {\n  buildingBlocks: () => BuildingBlockFigure[];\n  onBuildingBlocksUpdated: (bb: BuildingBlockFigure[]) => any;\n};\nexport const createPlaceBuildingBlock =\n  ({ onBuildingBlocksUpdated, buildingBlocks }: Listener) =>\n  (x: number, y: number) => {\n    const created = BuildingBlockFigure({\n      id: NewBuildingBlockFigureId(),\n      type: \"BuildingBlockFigure\",\n      width: 75 * 2,\n      height: 75,\n      x: x,\n      y: y,\n      bbName: \"unamed\",\n      resizing: false,\n    });\n    const updatedBbs = [...buildingBlocks(), created];\n    onBuildingBlocksUpdated(updatedBbs);\n  };\n\nexport type PlaceBuildingblock = ReturnType<typeof createPlaceBuildingBlock>;\n","import { BuildingBlockFigure } from \"../models/editor-core/building-block-figure/BuildingBlockFigure\";\nimport { DependencyRuleFigure } from \"../models/editor-core/dependency-rule/DependencyRuleFigure\";\nimport { NewDependencyRuleFigureId } from \"../models/editor-core/dependency-rule/DependencyRuleFigureId\";\n\ntype Listener = {\n  onRules: (r: DependencyRuleFigure[]) => any;\n  buildingBlocks: () => BuildingBlockFigure[];\n  rules: () => DependencyRuleFigure[];\n};\nexport const createPlaceDependencyRule =\n  ({ onRules, buildingBlocks, rules }: Listener) =>\n  (startBB: BuildingBlockFigure, endBB: BuildingBlockFigure) => {\n    const start = buildingBlocks().find((b) => b.id === startBB.id);\n    const end = buildingBlocks().find((b) => b.id === endBB.id);\n\n    if (!start || !end) {\n      return;\n    }\n\n    const findRule = rules().findIndex(\n      (r) => r.from === startBB.id && r.to === endBB.id\n    );\n    if (findRule !== -1) {\n      console.log(\"Rule does exist already\");\n      return;\n    }\n\n    const newRules = [\n      ...rules(),\n      DependencyRuleFigure({\n        type: \"DependencyRuleFigure\",\n        id: NewDependencyRuleFigureId(),\n        from: start.id,\n        to: end.id,\n      }),\n    ];\n    onRules(newRules);\n  };\n\nexport type PlaceDependencyRule = ReturnType<typeof createPlaceDependencyRule>;\n","import { Tool } from \"../models/editor-core/Tool\";\nimport { BuildingBlockFigure } from \"../models/editor-core/building-block-figure/BuildingBlockFigure\";\n\ntype Listener = {\n  tool: () => Tool;\n  onDetails: (x: BuildingBlockFigure | null) => any;\n};\nexport const createCloseSelection =\n  ({ tool, onDetails }: Listener) =>\n  () => {\n    const current = tool();\n    if (current.type === \"SELECTION\") {\n      onDetails(null);\n    }\n  };\n\nexport type CloseSelection = ReturnType<typeof createCloseSelection>;\n","import { isFirstSelection, RuleTool } from \"../models/editor-core/RuleTool\";\nimport { Tool } from \"../models/editor-core/Tool\";\nimport { BuildingBlockFigure } from \"../models/editor-core/building-block-figure/BuildingBlockFigure\";\nimport { PlaceDependencyRule } from \"./place-dependency-rule\";\nimport { Figure, isBuildingBlock } from \"../models/editor-core/figure/Figure\";\n\ntype Source = \"BLOCK\" | \"ICON\";\n\ntype Listener = {\n  onToolUpdated: (t: Tool) => any;\n  onSelectedFigure: (bb: Figure | null) => any;\n  onSpawnTransform: (bb: Figure) => any;\n  placeDependencyRule: PlaceDependencyRule;\n  tool: () => Tool;\n};\nexport const createSelectBuildingBlockForRule =\n  ({\n    onToolUpdated,\n    placeDependencyRule,\n    tool,\n    onSelectedFigure,\n    onSpawnTransform,\n  }: Listener) =>\n  (bb: Figure | null, source: Source) => {\n    const currentTool = tool();\n\n    const isResizer =\n      currentTool.type === \"SELECTION\" && source === \"BLOCK\" && bb !== null;\n\n    if (isResizer) {\n      onSpawnTransform(bb);\n      return;\n    }\n\n    if (currentTool.type === \"SELECTION\" && source !== \"BLOCK\") {\n      onSelectedFigure(bb);\n      return;\n    }\n\n    if (currentTool.type === \"PLACE_RULE\") {\n      const tool: RuleTool = RuleTool(currentTool);\n      const firstSelection = isFirstSelection(tool);\n      if (firstSelection && bb !== null && isBuildingBlock(bb)) {\n        const updatedTool = Tool({ ...currentTool, from: bb });\n        onToolUpdated(updatedTool);\n      } else {\n        if (currentTool.from === null || bb === null || !isBuildingBlock(bb)) {\n          throw new Error(\n            \"Invalid state. Second Place Rule does only work on Valid BBs, but was placed on \" +\n              JSON.stringify(bb)\n          );\n        }\n        placeDependencyRule(BuildingBlockFigure(currentTool.from), bb);\n        onToolUpdated(Tool({ type: \"SELECTION\" }));\n      }\n    }\n  };\n\nexport type SelectionAction = ReturnType<\n  typeof createSelectBuildingBlockForRule\n>;\n","import { DependencyRuleFigure } from \"../../domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure\";\nimport {\n  BuildingBlockFigure,\n  BuildingBlockFigureId,\n} from \"../../domain-editor/models/editor-core/building-block-figure/BuildingBlockFigure\";\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport {\n  GeometryRect,\n  intersectRect,\n  toGeometryRect,\n} from \"../../domain-editor/models/editor-core/figure/geometry\";\nimport { QueryFigures } from \"../../domain-editor/interactions/query-figures\";\nimport { isBuildingBlock } from \"../../domain-editor/models/editor-core/figure/Figure\";\n\ntype StateDeps = {\n  dependencyRules: () => DependencyRuleFigure[];\n  buildingBlocks: () => BuildingBlockFigure[];\n  featureTypes: () => FeatureTypeFigure[];\n  query: QueryFigures;\n};\n\nexport const createConvertToFeatureLint =\n  ({ dependencyRules, buildingBlocks, featureTypes, query }: StateDeps) =>\n  () => {\n    console.log(\"HELLO\");\n    console.log(\"Found \", dependencyRules());\n    const allFeatureTypes: { [featurName: string]: any } = {};\n    for (const f of featureTypes()) {\n      const featureRect: GeometryRect = toGeometryRect(f);\n      allFeatureTypes[f.name] = {};\n      for (const bb of buildingBlocks()) {\n        const bbRect: GeometryRect = toGeometryRect(bb);\n        if (intersectRect(bbRect, featureRect)) {\n          let depCriteria: string[] = [];\n          for (const allowedImport of dependencyRules()) {\n            const bb1 = query.figureById(\n              BuildingBlockFigureId(allowedImport.from)\n            );\n            const bb2 = query.figureById(\n              BuildingBlockFigureId(allowedImport.to)\n            );\n\n            const isRuleRelevantForBb = bb1?.id === bb.id;\n            if (!isRuleRelevantForBb) {\n              continue;\n            }\n\n            if (!bb1 || !bb2) {\n              throw new Error(\n                \"Trying to create a dep rule from \" +\n                  bb1 +\n                  \" to \" +\n                  bb2 +\n                  \" but one of them is null\"\n              );\n            }\n            if (isBuildingBlock(bb2)) {\n              depCriteria = [...depCriteria, \"@\" + bb2.bbName];\n            }\n          }\n          allFeatureTypes[f.name] = {\n            ...allFeatureTypes[f.name],\n            [bb.bbName]: {\n              rules: [\n                {\n                  name: \"dependencies\",\n                  criteria: depCriteria,\n                },\n              ],\n            },\n          };\n        }\n      }\n    }\n    const created = {\n      $schema:\n        \"https://raw.githubusercontent.com/feature-lint/feature-lint/pages/schema/feature-lint-v0.0.15.schema.json\",\n      rootDir: \"./src/features\",\n      featureTypes: allFeatureTypes,\n    };\n    return created;\n  };\nexport type ConvertToFeatureLintJson = ReturnType<\n  typeof createConvertToFeatureLint\n>;\n","import * as React from 'react';\nimport {EditorPlane} from \"../features/react-editor/wired/EditorPlane\";\n\ntype Props = {\n\n};\nexport const App = (props: Props) => {\n    return (\n        <EditorPlane />\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./appshell/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}