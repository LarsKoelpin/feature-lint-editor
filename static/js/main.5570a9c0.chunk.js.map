{"version":3,"sources":["reportWebVitals.ts","features/domain-editor/models/editor-core/BuildingBlockFigure.ts","features/domain-editor/models/editor-core/RuleTool.ts","features/domain-editor/models/editor-core/Tool.ts","features/react-editor/components/hud/MenuEntry.tsx","features/react-editor/components/hud/ToolBar.tsx","features/domain-editor/models/editor-core/RuleGhost.ts","features/react-editor/components/getPos.ts","features/react-editor/components/figures/UIFeature.tsx","features/react-editor/components/figures/UIBuildingBlockFigure.tsx","features/domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigureId.ts","features/domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure.ts","features/react-editor/components/figures/UIDependencyRule.tsx","features/react-editor/components/DrawingPlane.tsx","features/react-editor/components/useWindowSize.ts","features/domain-editor/interactions/update-buildingblock.ts","features/domain-editor/models/editor-core/dependency-rule/DependencyRuleFigureId.ts","features/domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure.ts","features/domain-editor/models/editor-core/figure/Figure.ts","features/react-editor/components/figure-details/BuildingBlockDetails.tsx","features/react-editor/components/Details.tsx","features/domain-editor/models/editor-core/figure/geometry.ts","features/react-modal/components/Backdrop.tsx","features/react-modal/components/ModalFrame.tsx","features/react-modal/components/Modal.tsx","features/react-editor/components/hud/save-dialog/SaveDialog.tsx","features/react-editor/components/hud/TopBar.tsx","features/domain-editor/interactions/update-featuretype.ts","features/react-editor/wired/EditorPlane.tsx","features/domain-editor/interactions/query-figures.ts","features/react-editor/controllers/useDrawingState.ts","features/react-editor/controllers/useToolState.ts","features/domain-editor/interactions/place-buildingblock.ts","features/domain-editor/interactions/place-dependency-rule.ts","features/domain-editor/interactions/close-selection.ts","features/domain-editor/interactions/building-block-selection.ts","features/domain-converter/interactions/convertToFeatureLintJson.ts","appshell/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ID_SCHEMA","BuildingBlockFigureIdSchema","vod","zod","refine","x","startsWith","BuildingBlockFigureId","create","BuildingBlockFigureSchema","id","bbName","type","positive","y","width","height","BuildingBlockFigure","RuleToolSchema","from","nullable","to","RuleTool","SelectionToolSchema","PlaceBuildingBlockSchema","PlaceFeatureTypeSchema","ToolSchema","Tool","MenuEntry","styled","button","props","active","ICON_SIZE","ToolBar","tool","selectTool","SidebarContainer","currentTool","onClick","path","mdiCursorDefault","size","color","mdiHexagon","mdiHexagonMultipleOutline","mdiRelationManyToOne","div","RuleGhost","endX","endY","getPos","e","screenPos","target","getStage","getPointerPosition","getElementPos","position","Error","UiFeature","figure","updateFeatureType","onSelect","useState","textEdit","setTextEdit","posInfo","setPosInfo","textNode","useRef","draggable","onDragMove","pos","updatePosition","onKeyDown","keyCode","onChange","updateName","value","ref","focus","style","background","name","preventDefault","listening","fill","wrap","align","verticalAlign","text","fontSize","onDblClick","event","textPosition","current","getAbsolutePosition","stageBox","currentTarget","container","getBoundingClientRect","areaPosition","left","top","strokeWidth","stroke","groupProps","padding","boxSizing","mdiCog","UiBuildingBlockFigure","updateBuildingBlock","offset","onDragEnd","ID_START","FeatureTypeFigureIdSchema","FeatureTypeFigureId","FeatureTypeFigure","UiDependencyRule","queryBuildingBlocks","rule","figureById","console","log","points","DrawingPlane","t","figures","onSelectFigure","window","innerWidth","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","Container","onMouseMove","setRuleGhost","oldGhost","clickListener","featureTypeFigures","map","buildingBlockFigures","ruleGhost","rules","placeFeature","placeBuildingBlock","nanoid","createUpdateBuildingBlock","bbs","onBuildingBlocks","bb","newName","b","findIndex","h","result","R","old","withName","withPosition","DependencyRuleFigureIdSchema","DependencyRuleFigure","isBuildingBlock","f","BuildingBlockDetails","onClose","Details","figureId","query","DetailsContainer","Headline","toGeometryRect","bottom","right","Backdrop","ModalFrame","Modal","ReactDOM","createPortal","children","document","getElementById","SaveDialog","close","display","flexDirection","border","overflow","contentEditable","TopBar","convertToJson","featureLintConfig","setShowDialog","TopContainer","JSON","stringify","mdiContentSave","createUpdateFeatureType","onFeatures","featureTypes","EditorPlane","featureFigures","setFeatureTypeFigures","setBuildingBlockFigures","setRules","useDrawingState","setCurrentTool","details","setDetails","useToolState","onBuildingBlocksUpdated","buildingBlocks","created","updatedBbs","createPlaceBuildingBlock","placeDependencyRule","onRules","startBB","endBB","start","find","end","newRules","createPlaceDependencyRule","r","closeSelection","onDetails","createCloseSelection","d","toolBuildingBlockInteraction","onToolUpdated","onSelectedFigure","source","updatedTool","createSelectBuildingBlockForRule","maybeBb","dependencyRules","big","small","allFeatureTypes","featureRect","depCriteria","allowedImport","bb1","bb2","criteria","$schema","rootDir","createConvertToFeatureLint","Plane","App","render","StrictMode"],"mappings":"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","file":"static/js/main.5570a9c0.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { nanoid } from \"nanoid\";\n\nconst ID_SCHEMA = \"urn:building-block-figure:\";\nexport const BuildingBlockFigureIdSchema = vod(\n  \"BuildingBlockFigureId\",\n  zod.string().refine((x) => x.startsWith(ID_SCHEMA))\n);\nexport type BuildingBlockFigureId = zod.infer<\n  typeof BuildingBlockFigureIdSchema\n>;\nexport const BuildingBlockFigureId = BuildingBlockFigureIdSchema.create;\n\nexport const NewBuildingBlockFigureId = () =>\n  BuildingBlockFigureIdSchema.create(ID_SCHEMA + nanoid());\n\nexport const BuildingBlockFigureSchema = vod(\n  \"BuildingBlockFigure\",\n  zod.object({\n    id: BuildingBlockFigureIdSchema,\n    bbName: zod.string(),\n    type: zod.literal(\"BuildingBlockFigure\"),\n    x: zod.number().positive(),\n    y: zod.number().positive(),\n    width: zod.number().positive(),\n    height: zod.number().positive(),\n  })\n);\n\nexport type BuildingBlockFigure = zod.infer<typeof BuildingBlockFigureSchema>;\nexport const BuildingBlockFigure = BuildingBlockFigureSchema.create;\n\nexport const withPosition = (x: number, y: number, bb: BuildingBlockFigure) => {\n  return BuildingBlockFigure({ ...bb, x, y });\n};\n\nexport const withName = (name: string, bb: BuildingBlockFigure) => {\n  return BuildingBlockFigure({ ...bb, bbName: name });\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { BuildingBlockFigureSchema } from \"./BuildingBlockFigure\";\nimport { Tool } from \"./Tool\";\n\nexport const RuleToolSchema = vod(\n  \"RuleTool\",\n  zod.object({\n    type: zod.literal(\"PLACE_RULE\"),\n    from: BuildingBlockFigureSchema.nullable(),\n    to: BuildingBlockFigureSchema.nullable(),\n  })\n);\nexport type RuleTool = zod.infer<typeof RuleToolSchema>;\nexport const RuleTool = RuleToolSchema.create;\n\nexport const isFirstSelection = (t: RuleTool) => {\n  return t.from === null;\n};\n\nexport const isWaitingForSecondSelection = (t: Tool): t is RuleTool => {\n  return t.type === \"PLACE_RULE\" && t.from !== null;\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { RuleTool, RuleToolSchema } from \"./RuleTool\";\n\nexport const SelectionToolSchema = vod(\n  \"Visual-Selection\",\n  zod.object({\n    type: zod.literal(\"SELECTION\"),\n  })\n);\nexport const PlaceBuildingBlockSchema = vod(\n  \"Visual-BB\",\n  zod.object({\n    type: zod.literal(\"PLACE_BUILDING_BLOCK\"),\n  })\n);\nexport const PlaceFeatureTypeSchema = vod(\n  \"Visual-Feature\",\n  zod.object({\n    type: zod.literal(\"PLACE_FEATURE\"),\n  })\n);\n\nexport const ToolSchema = vod(\n  \"Tool\",\n  zod.union([\n    SelectionToolSchema,\n    PlaceBuildingBlockSchema,\n    PlaceFeatureTypeSchema,\n    RuleToolSchema,\n  ])\n);\n\nexport const VisualBuildingBlock = PlaceBuildingBlockSchema.create;\nexport const SelectionTool = SelectionToolSchema.create;\nexport const Tool = ToolSchema.create;\nexport type Tool = zod.infer<typeof ToolSchema> | RuleTool;\n","import styled from \"styled-components\";\n\nexport const MenuEntry = styled.button<{ active: boolean }>`\n  padding: 8px;\n  font-size: 12px;\n  outline: none;\n  border: 0;\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  background: ${(props) => {\n    if (props.active) {\n      return \"#f6f6f6\";\n    }\n    return \"transparent\";\n  }};\n  &:hover {\n    background: ${(props) => {\n      if (props.active) {\n        return \"#f6f6f6\";\n      }\n      return \"#ececec\";\n    }};\n    cursor: pointer;\n  }\n`;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@mdi/react\";\nimport {\n  mdiCursorDefault,\n  mdiHexagon,\n  mdiHexagonMultipleOutline,\n  mdiRelationManyToOne,\n} from \"@mdi/js\";\nimport { ToolState } from \"../../controllers/useToolState\";\nimport { Tool } from \"../../../domain-editor/models/editor-core/Tool\";\nimport { MenuEntry } from \"./MenuEntry\";\n\ntype Props = {\n  tool: ToolState;\n  selectTool: (t: Tool) => any;\n};\nconst ICON_SIZE = 1.1;\nexport const ToolBar = ({ tool, selectTool }: Props) => {\n  return (\n    <SidebarContainer>\n      <MenuEntry\n        active={tool.currentTool.type === \"SELECTION\"}\n        onClick={() => selectTool(Tool({ type: \"SELECTION\" }))}\n      >\n        <Icon path={mdiCursorDefault} size={ICON_SIZE} color=\"grey\" />\n        Select\n      </MenuEntry>\n      <MenuEntry\n        active={tool.currentTool.type === \"PLACE_FEATURE\"}\n        onClick={() => selectTool(Tool({ type: \"PLACE_FEATURE\" }))}\n      >\n        <Icon path={mdiHexagon} size={ICON_SIZE} color=\"grey\" />\n        Feature\n      </MenuEntry>\n      <MenuEntry\n        active={tool.currentTool.type === \"PLACE_BUILDING_BLOCK\"}\n        onClick={() => selectTool(Tool({ type: \"PLACE_BUILDING_BLOCK\" }))}\n      >\n        <Icon path={mdiHexagonMultipleOutline} size={ICON_SIZE} color=\"grey\" />\n        Building Block\n      </MenuEntry>\n      <MenuEntry\n        active={tool.currentTool.type === \"PLACE_RULE\"}\n        onClick={() =>\n          selectTool(Tool({ type: \"PLACE_RULE\", from: null, to: null }))\n        }\n      >\n        <Icon path={mdiRelationManyToOne} size={ICON_SIZE} color=\"grey\" />\n        Allow Import\n      </MenuEntry>\n    </SidebarContainer>\n  );\n};\n\nconst SidebarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: centeR;\n  justify-content: flex-start;\n  left: 8px;\n  top: 30%;\n  position: absolute;\n  width: 64px;\n  background: white;\n  z-index: 99999;\n  border-radius: 5px;\n\n  -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n`;\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\n\nexport const RuleGhostSchema = vod(\n  \"RuleGhost\",\n  zod.object({\n    endX: zod.number(),\n    endY: zod.number(),\n  })\n);\nexport type RuleGhost = zod.infer<typeof RuleGhostSchema>;\nexport const RuleGhost = RuleGhostSchema.create;\n","import { KonvaEventObject } from \"konva/lib/Node\";\n\nexport const getPos = (e: KonvaEventObject<any>): { x: number; y: number } => {\n  const screenPos = e.target.getStage()?.getPointerPosition();\n  if (screenPos?.x && screenPos.y) {\n    return screenPos;\n  }\n  return { x: 0, y: 0 };\n};\n\nexport const getElementPos = (\n  e: KonvaEventObject<any>\n): { x: number; y: number } => {\n  const screenPos = e.target.position();\n  if (screenPos?.x && screenPos.y) {\n    return screenPos;\n  }\n  throw new Error(\"No element pos possible\");\n};\n","import * as React from \"react\";\nimport { Group, Rect, Text } from \"react-konva\";\nimport { FeatureTypeFigure } from \"../../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { getElementPos } from \"../getPos\";\nimport { UpdateFeatureType } from \"../../../domain-editor/interactions/update-featuretype\";\nimport { Html } from \"react-konva-utils\";\nimport { useRef, useState } from \"react\";\nimport { mdiCog } from \"@mdi/js\";\nimport Icon from \"@mdi/react\";\nimport { SelectionAction } from \"../../../domain-editor/interactions/building-block-selection\";\n\ntype Props = {\n  figure: FeatureTypeFigure;\n  onSelect: SelectionAction;\n  updateFeatureType: UpdateFeatureType;\n};\nexport const UiFeature = ({ figure, updateFeatureType, onSelect }: Props) => {\n  const [textEdit, setTextEdit] = useState<boolean>(false);\n  const [posInfo, setPosInfo] = useState<any>({});\n  const textNode = useRef<any>();\n\n  const height = figure.height;\n  const width = figure.width;\n\n  const iconSize = 42;\n  return (\n    <>\n      <Group\n        draggable={true}\n        onDragMove={(e) => {\n          const pos = getElementPos(e);\n          updateFeatureType.updatePosition(figure, pos.x, pos.y);\n        }}\n      >\n        {textEdit ? (\n          <Html>\n            <textarea\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  setTextEdit(false);\n                }\n              }}\n              onChange={(e) => {\n                updateFeatureType.updateName(figure, e.target.value);\n              }}\n              ref={(ref) => ref?.focus()}\n              style={{\n                background: \"red\",\n                position: \"absolute\",\n                ...posInfo,\n                height: height + \"px\",\n              }}\n            >\n              {figure.name}\n            </textarea>\n          </Html>\n        ) : null}\n        <Text\n          ref={textNode as any}\n          preventDefault={true}\n          listening={false}\n          fill={\"black\"}\n          wrap={\"none\"}\n          align={\"center\"}\n          verticalAlign=\"middle\"\n          width={200}\n          height={50}\n          text={figure.name}\n          x={figure.x}\n          y={figure.y}\n          fontSize={20}\n        />\n        <Rect\n          onDblClick={(event) => {\n            setTextEdit(!textEdit);\n            const textPosition = textNode.current!.getAbsolutePosition();\n            const stage = event.currentTarget.getStage();\n            const stageBox = stage!.container().getBoundingClientRect();\n            const areaPosition = {\n              x: stageBox.left + textPosition.x,\n              y: stageBox.top + textPosition.y,\n            };\n            setPosInfo({\n              top: areaPosition.y + \"px\",\n              left: areaPosition.x + \"px\",\n              width: width + \"px\",\n            });\n          }}\n          draggable\n          x={figure.x}\n          y={figure.y}\n          height={height}\n          width={width}\n          strokeWidth={5}\n          stroke={\"black\"}\n        />\n      </Group>\n      <Html\n        groupProps={{\n          x: figure.x + figure.width - iconSize,\n          y: figure.y,\n          fill: \"red\",\n          width: iconSize,\n          height: iconSize,\n        }}\n      >\n        <div\n          style={{\n            width: iconSize,\n            height: iconSize,\n            padding: \"8px\",\n            boxSizing: \"border-box\",\n          }}\n          onClick={() => onSelect(figure, \"ICON\")}\n        >\n          <Icon path={mdiCog} size={1.2} />\n        </div>\n      </Html>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport { Text, Rect, Group } from \"react-konva\";\nimport { Html } from \"react-konva-utils\";\nimport { BuildingBlockFigure } from \"../../../domain-editor/models/editor-core/BuildingBlockFigure\";\nimport { getElementPos } from \"../getPos\";\nimport { UpdateBuildingBlock } from \"../../../domain-editor/interactions/update-buildingblock\";\nimport { useRef, useState } from \"react\";\nimport Icon from \"@mdi/react\";\nimport { mdiCog } from \"@mdi/js\";\nimport { SelectionAction } from \"../../../domain-editor/interactions/building-block-selection\";\n\ntype Props = {\n  figure: BuildingBlockFigure;\n  onSelect: SelectionAction;\n  updateBuildingBlock: UpdateBuildingBlock;\n};\nexport const UiBuildingBlockFigure = ({\n  figure,\n  onSelect,\n  updateBuildingBlock,\n}: Props) => {\n  const [textEdit, setTextEdit] = useState<boolean>(false);\n  const [posInfo, setPosInfo] = useState<any>({});\n  const textNode = useRef<any>();\n  const width = figure.width;\n  const height = figure.height;\n\n  const iconSize = 42;\n  const fontSize = 20;\n  const offset = height / fontSize;\n  const color = textEdit ? \"green\" : \"red\";\n  return (\n    <>\n      <Group\n        draggable={true}\n        onDragEnd={(e) => {\n          const pos = getElementPos(e);\n          updateBuildingBlock.updatePosition(figure, pos.x, pos.y);\n        }}\n        onDragMove={(e) => {\n          const pos = getElementPos(e);\n          updateBuildingBlock.updatePosition(figure, pos.x, pos.y);\n        }}\n        onClick={(e) => {\n          onSelect(figure, \"BLOCK\");\n        }}\n      >\n        {textEdit ? (\n          <Html>\n            <textarea\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  setTextEdit(false);\n                }\n              }}\n              onChange={(e) => {\n                updateBuildingBlock.updateName(figure, e.target.value);\n              }}\n              ref={(ref) => ref?.focus()}\n              style={{\n                background: \"red\",\n                position: \"absolute\",\n                ...posInfo,\n                height: height + \"px\",\n              }}\n            >\n              {figure.bbName}\n            </textarea>\n          </Html>\n        ) : null}\n        <Rect\n          onDblClick={(event) => {\n            setTextEdit(!textEdit);\n            const textPosition = textNode.current!.getAbsolutePosition();\n            const stage = event.currentTarget.getStage();\n            const stageBox = stage!.container().getBoundingClientRect();\n            const areaPosition = {\n              x: stageBox.left + textPosition.x,\n              y: stageBox.top + textPosition.y,\n            };\n            setPosInfo({\n              top: areaPosition.y + \"px\",\n              left: areaPosition.x + \"px\",\n              width: width + \"px\",\n            });\n          }}\n          draggable\n          x={figure.x}\n          y={figure.y}\n          width={width}\n          height={height}\n          stroke={color}\n        />\n        <Text\n          preventDefault={true}\n          ref={textNode as any}\n          listening={false}\n          fill={color}\n          wrap={\"none\"}\n          align={\"center\"}\n          verticalAlign=\"middle\"\n          width={width}\n          height={height}\n          text={figure.bbName}\n          x={figure.x}\n          y={figure.y + offset / 2}\n          fontSize={fontSize}\n        />\n      </Group>\n      <Html\n        groupProps={{\n          x: figure.x + figure.width - iconSize,\n          y: figure.y,\n          fill: \"red\",\n          width: iconSize,\n          height: iconSize,\n        }}\n      >\n        <div\n          style={{\n            width: iconSize,\n            height: iconSize,\n            padding: \"8px\",\n            boxSizing: \"border-box\",\n          }}\n          onClick={() => onSelect(figure, \"ICON\")}\n        >\n          <Icon path={mdiCog} size={1.2} />\n        </div>\n      </Html>\n    </>\n  );\n};\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { nanoid } from \"nanoid\";\n\nconst ID_START = \"urn:feature-type:\";\nexport const FeatureTypeFigureIdSchema = vod(\n  \"FeatureTypeFigureId\",\n  zod.string().refine((x) => x.startsWith(ID_START))\n);\n\nexport type FeatureTypeFigureId = zod.infer<typeof FeatureTypeFigureIdSchema>;\nexport const FeatureTypeFigureId = FeatureTypeFigureIdSchema.create;\nexport const NewFeatureTypeFigureId = (): FeatureTypeFigureId =>\n  FeatureTypeFigureId(ID_START + nanoid());\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { FeatureTypeFigureIdSchema } from \"./FeatureTypeFigureId\";\n\nexport const FeatureTypeFigureSchema = vod(\n  \"FeatureRep\",\n  zod.object({\n    id: FeatureTypeFigureIdSchema,\n    name: zod.string(),\n    type: zod.literal(\"FeatureFigure\"),\n    x: zod.number().positive(),\n    y: zod.number().positive(),\n    width: zod.number().positive(),\n    height: zod.number().positive(),\n  })\n);\n\nexport type FeatureTypeFigure = zod.infer<typeof FeatureTypeFigureSchema>;\nexport const FeatureTypeFigure = FeatureTypeFigureSchema.create;\n\nexport const withPosition = (x: number, y: number, bb: FeatureTypeFigure) => {\n  return FeatureTypeFigure({ ...bb, x, y });\n};\n\nexport const withName = (name: string, bb: FeatureTypeFigure) => {\n  return FeatureTypeFigure({ ...bb, name: name });\n};\n","import * as React from \"react\";\nimport { Arrow } from \"react-konva\";\nimport { DependencyRuleFigure } from \"../../../domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure\";\nimport { QueryFigures } from \"../../../domain-editor/interactions/query-figures\";\nimport { BuildingBlockFigureId } from \"../../../domain-editor/models/editor-core/BuildingBlockFigure\";\n\ntype Props = {\n  rule: DependencyRuleFigure;\n  queryBuildingBlocks: QueryFigures;\n};\nexport const UiDependencyRule = ({ queryBuildingBlocks, rule }: Props) => {\n  const from = queryBuildingBlocks.figureById(BuildingBlockFigureId(rule.from));\n  const to = queryBuildingBlocks.figureById(BuildingBlockFigureId(rule.to));\n\n  if (to && from) {\n    return (\n      <Arrow\n        onClick={() => console.log(\"HELLO\")}\n        points={[from.x, from.y, to.x, to.y]}\n        stroke={\"red\"}\n        strokeWidth={5}\n      />\n    );\n  }\n  return null;\n};\n","import * as React from \"react\";\nimport { Arrow, Layer, Rect, Stage } from \"react-konva\";\nimport { useWindowSize } from \"./useWindowSize\";\nimport { Figures } from \"../controllers/useDrawingState\";\n\nimport { ToolState } from \"../controllers/useToolState\";\nimport { RuleGhost } from \"../../domain-editor/models/editor-core/RuleGhost\";\nimport { getPos } from \"./getPos\";\nimport { UiFeature } from \"./figures/UIFeature\";\nimport { UiBuildingBlockFigure } from \"./figures/UIBuildingBlockFigure\";\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { QueryFigures } from \"../../domain-editor/interactions/query-figures\";\nimport { isWaitingForSecondSelection } from \"../../domain-editor/models/editor-core/RuleTool\";\nimport { UpdateBuildingBlock } from \"../../domain-editor/interactions/update-buildingblock\";\nimport { UiDependencyRule } from \"./figures/UIDependencyRule\";\nimport { PlaceBuildingblock } from \"../../domain-editor/interactions/place-buildingblock\";\nimport styled from \"styled-components\";\nimport { NewFeatureTypeFigureId } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigureId\";\nimport { UpdateFeatureType } from \"../../domain-editor/interactions/update-featuretype\";\nimport { SelectionAction } from \"../../domain-editor/interactions/building-block-selection\";\n\ntype Props = {\n  tool: ToolState;\n  figures: Figures;\n  placeFeature: (f: FeatureTypeFigure) => any;\n  queryBuildingBlocks: QueryFigures;\n  updateBuildingBlock: UpdateBuildingBlock;\n  updateFeatureType: UpdateFeatureType;\n  placeBuildingBlock: PlaceBuildingblock;\n  onSelectFigure: SelectionAction;\n};\nexport const DrawingPlane = (props: Props) => {\n  const {\n    figures,\n    tool,\n    updateBuildingBlock,\n    onSelectFigure,\n    queryBuildingBlocks,\n    updateFeatureType,\n  } = props;\n  const size = useWindowSize();\n\n  const { currentTool } = tool;\n\n  return (\n    <Container>\n      <Stage\n        height={size.height}\n        width={size.width}\n        onMouseMove={(e) => {\n          const screenPos = getPos(e);\n          tool.setRuleGhost((oldGhost) => {\n            return RuleGhost({\n              endX: screenPos.x,\n              endY: screenPos.y,\n            });\n          });\n        }}\n        onClick={(e) => {\n          const screenPos = getPos(e);\n          clickListener(props, { x: screenPos.x, y: screenPos.y });\n        }}\n      >\n        <Layer>\n          <Rect\n            listening={false}\n            x={0}\n            y={0}\n            width={size.width}\n            height={size.height}\n            fill={\"#fbfbfb\"}\n          />\n        </Layer>\n        <Layer>\n          {figures.featureTypeFigures.map((x) => (\n            <UiFeature\n              onSelect={onSelectFigure}\n              key={x.id}\n              figure={x}\n              updateFeatureType={updateFeatureType}\n            />\n          ))}\n          {figures.buildingBlockFigures.map((x) => (\n            <UiBuildingBlockFigure\n              key={x.id}\n              updateBuildingBlock={updateBuildingBlock}\n              figure={x}\n              onSelect={onSelectFigure}\n            />\n          ))}\n          {isWaitingForSecondSelection(currentTool) && tool.ruleGhost ? (\n            <Arrow\n              listening={false}\n              points={[\n                currentTool.from!.x,\n                currentTool.from!.y,\n                tool.ruleGhost?.endX,\n                tool.ruleGhost?.endY,\n              ]}\n              strokeWidth={2}\n              stroke={\"red\"}\n            />\n          ) : null}\n          {figures.rules.map((rule) => {\n            return (\n              <UiDependencyRule\n                key={rule.id}\n                queryBuildingBlocks={queryBuildingBlocks}\n                rule={rule}\n              />\n            );\n          })}\n        </Layer>\n      </Stage>\n    </Container>\n  );\n};\n\nconst clickListener = (\n  { tool, placeFeature, placeBuildingBlock }: Props,\n  screenPos: { x: number; y: number }\n) => {\n  switch (tool.currentTool.type) {\n    case \"PLACE_FEATURE\":\n      placeFeature(\n        FeatureTypeFigure({\n          name: \"unnamed-feature\",\n          id: NewFeatureTypeFigureId(),\n          height: 500,\n          width: 500,\n          x: screenPos.x,\n          y: screenPos.y,\n          type: \"FeatureFigure\",\n        })\n      );\n      break;\n    case \"PLACE_BUILDING_BLOCK\":\n      placeBuildingBlock(screenPos.x, screenPos.y);\n      break;\n    default:\n      break;\n  }\n};\n\nconst Container = styled.div`\n  cursor: crosshair;\n`;\n","import { useState, useEffect } from \"react\";\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n","import {\n  BuildingBlockFigure,\n  withName,\n  withPosition,\n} from \"../models/editor-core/BuildingBlockFigure\";\nimport * as R from \"ramda\";\n\ntype Listener = {\n  onBuildingBlocks: (bb: BuildingBlockFigure[]) => any;\n};\nexport const createUpdateBuildingBlock = (\n  { onBuildingBlocks }: Listener,\n  bbs: BuildingBlockFigure[]\n) => {\n  return {\n    updateName: (bb: BuildingBlockFigure, newName: string) => {\n      const b = bbs.findIndex((h) => h.id === bb.id);\n      if (b === -1) {\n        return bbs;\n      }\n      const result = R.adjust(b, (old) => withName(newName, old), bbs);\n      onBuildingBlocks(result);\n      return result;\n    },\n    updatePosition: (\n      bb: BuildingBlockFigure,\n      x: number,\n      y: number\n    ): BuildingBlockFigure[] => {\n      const b = bbs.findIndex((h) => h.id === bb.id);\n      if (b === -1) {\n        return bbs;\n      }\n      const result = R.adjust(b, (old) => withPosition(x, y, old), bbs);\n      onBuildingBlocks(result);\n      return result;\n    },\n  };\n};\n\nexport type UpdateBuildingBlock = ReturnType<typeof createUpdateBuildingBlock>;\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { nanoid } from \"nanoid\";\n\nconst ID_START = \"urn:dependency-rule:\";\nexport const DependencyRuleFigureIdSchema = vod(\n  \"DependencyRuleFigureId\",\n  zod.string().refine((x) => x.startsWith(ID_START))\n);\n\nexport type DependencyRuleFigureId = zod.infer<\n  typeof DependencyRuleFigureIdSchema\n>;\nexport const DependencyRuleFigureId = DependencyRuleFigureIdSchema.create;\nexport const NewDependencyRuleFigureId = () => ID_START + nanoid();\n","import vod from \"@renke/vod\";\nimport * as zod from \"zod\";\nimport { BuildingBlockFigureIdSchema } from \"../BuildingBlockFigure\";\nimport { DependencyRuleFigureIdSchema } from \"./DependencyRuleFigureId\";\n\nexport const DependencyRuleFigureSchema = vod(\n  \"DependencyRuleFigure\",\n  zod.object({\n    id: DependencyRuleFigureIdSchema,\n    from: BuildingBlockFigureIdSchema,\n    to: BuildingBlockFigureIdSchema,\n  })\n);\nexport type DependencyRuleFigure = zod.infer<typeof DependencyRuleFigureSchema>;\nexport const DependencyRuleFigure = DependencyRuleFigureSchema.create;\n","import { DependencyRuleFigure } from \"../dependency-rule/DependencyRuleFigure\";\nimport { FeatureTypeFigure } from \"../feature-type-figure/FeatureTypeFigure\";\nimport { BuildingBlockFigure } from \"../BuildingBlockFigure\";\n\nexport type Figure =\n  | DependencyRuleFigure\n  | FeatureTypeFigure\n  | BuildingBlockFigure;\n\nexport const isBuildingBlock = (f: Figure): f is BuildingBlockFigure => {\n  return (f as any)?.type === \"BuildingBlockFigure\";\n};\n","import * as React from \"react\";\nimport { BuildingBlockFigure } from \"../../../domain-editor/models/editor-core/BuildingBlockFigure\";\n\ntype Props = {\n  figure: BuildingBlockFigure;\n  onClose: () => any;\n};\nexport const BuildingBlockDetails = ({ figure, onClose }: Props) => {\n  return (\n    <div>\n      <h2>{figure.bbName}</h2>\n      {figure.id}\n      <button onClick={onClose}>Close</button>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { QueryFigures } from \"../../domain-editor/interactions/query-figures\";\nimport { BuildingBlockDetails } from \"./figure-details/BuildingBlockDetails\";\n\ntype Props = {\n  figureId: string;\n  query: QueryFigures;\n  onClose: () => any;\n};\nexport const Details = ({ figureId, query, onClose }: Props) => {\n  const figure = query.figureById(figureId);\n  if (!figure) {\n    return null;\n  }\n  return (\n    <DetailsContainer>\n      <Headline>\n        <h2>Details</h2>\n      </Headline>\n      {(() => {\n        switch (figure.type) {\n          case \"BuildingBlockFigure\":\n            return <BuildingBlockDetails figure={figure} onClose={onClose} />;\n          case \"FeatureFigure\":\n            return <div>Hello</div>;\n        }\n      })()}\n    </DetailsContainer>\n  );\n};\n\nconst Headline = styled.div`\n  padding: 8px;\n`;\n\nconst DetailsContainer = styled.div`\n  display: flex;\n  background: red;\n  flex-direction: column;\n  align-items: flex-star;\n  justify-content: flex-start;\n  right: 0;\n  top: 0;\n  height: 100%;\n  position: absolute;\n  width: 400px;\n  background: white;\n  z-index: 99999;\n  border-radius: 5px;\n\n  -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n`;\n","export type GeometryRect = {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n};\n\nexport const toGeometryRect = (f: {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}) => {\n  return {\n    top: f.y,\n    bottom: f.y + f.height,\n    left: f.x,\n    right: f.x + f.width,\n  };\n};\n\nexport const intersectRect = (\n  big: GeometryRect,\n  small: GeometryRect\n): boolean => {\n  return !(\n    small.left > big.right ||\n    small.right < big.left ||\n    small.top > big.bottom ||\n    small.bottom < big.top\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.5);\n  top: 0;\n  left: 0;\n  z-index: 999999999999999999;\n`;\n","import styled from \"styled-components\";\n\nexport const ModalFrame = styled.div`\n  width: 500px;\n  height: 500px;\n  background: white;\n`;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Backdrop } from \"./Backdrop\";\nimport { ModalFrame } from \"./ModalFrame\";\n\ntype Props = {\n  children: any;\n};\nexport const Modal = (props: Props) => {\n  return ReactDOM.createPortal(\n    <Backdrop>\n      <ModalFrame>{props.children}</ModalFrame>\n    </Backdrop>,\n    document.getElementById(\"portal\")!\n  );\n};\n","import * as React from \"react\";\nimport { Modal } from \"../../../../react-modal/components/Modal\";\n\ntype Props = {\n  text: string;\n  close: () => any;\n};\nexport const SaveDialog = ({ text, close }: Props) => {\n  return (\n    <Modal>\n      <div\n        style={{\n          padding: \"8px\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div>\n          <h2>Configuration export</h2>\n        </div>\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            border: \"1px solid black\",\n            overflow: \"scroll\",\n          }}\n          contentEditable={true}\n        >\n          {text}\n        </div>\n        <button onClick={() => close()}> Close</button>\n      </div>\n    </Modal>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { MenuEntry } from \"./MenuEntry\";\nimport Icon from \"@mdi/react\";\nimport { mdiContentSave } from \"@mdi/js\";\nimport { ConvertToFeatureLintJson } from \"../../../domain-converter/interactions/convertToFeatureLintJson\";\nimport { useState } from \"react\";\nimport { SaveDialog } from \"./save-dialog/SaveDialog\";\n\ntype Props = {\n  convertToJson: ConvertToFeatureLintJson;\n};\nexport const TopBar = ({ convertToJson }: Props) => {\n  const [featureLintConfig, setShowDialog] = useState<string>(\"\");\n  return (\n    <TopContainer>\n      {featureLintConfig ? (\n        <SaveDialog text={featureLintConfig} close={() => setShowDialog(\"\")} />\n      ) : null}\n      <MenuEntry\n        active={false}\n        onClick={() => {\n          setShowDialog(JSON.stringify(convertToJson()));\n        }}\n      >\n        <Icon path={mdiContentSave} size={1.1} color=\"grey\" />\n        Save\n      </MenuEntry>\n    </TopContainer>\n  );\n};\n\nconst TopContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  margin: 0 auto;\n  left: 50%;\n  top: 0;\n  position: absolute;\n  height: 64px;\n  min-width: 200px;\n  background: white;\n  z-index: 99999;\n  border-radius: 5px;\n\n  -webkit-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  -moz-box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0 1px 3px;\n`;\n","import * as R from \"ramda\";\nimport {\n  FeatureTypeFigure,\n  withName,\n  withPosition,\n} from \"../models/editor-core/feature-type-figure/FeatureTypeFigure\";\n\ntype Listener = {\n  onFeatures: (featues: FeatureTypeFigure[]) => any;\n  featureTypes: () => FeatureTypeFigure[];\n};\nexport const createUpdateFeatureType = ({\n  onFeatures,\n  featureTypes,\n}: Listener) => {\n  const bbs = featureTypes();\n  return {\n    updateName: (bb: FeatureTypeFigure, newName: string) => {\n      const b = bbs.findIndex((h) => h.id === bb.id);\n      if (b === -1) {\n        return bbs;\n      }\n      const result = R.adjust(b, (old) => withName(newName, old), bbs);\n      onFeatures(result);\n      return result;\n    },\n    updatePosition: (\n      bb: FeatureTypeFigure,\n      x: number,\n      y: number\n    ): FeatureTypeFigure[] => {\n      const b = bbs.findIndex((h) => h.id === bb.id);\n      if (b === -1) {\n        return bbs;\n      }\n      const result = R.adjust(b, (old) => withPosition(x, y, old), bbs);\n      onFeatures(result);\n      return result;\n    },\n  };\n};\n\nexport type UpdateFeatureType = ReturnType<typeof createUpdateFeatureType>;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { ToolBar } from \"../components/hud/ToolBar\";\nimport { DrawingPlane } from \"../components/DrawingPlane\";\nimport { useToolState } from \"../controllers/useToolState\";\nimport { Tool } from \"../../domain-editor/models/editor-core/Tool\";\nimport { useDrawingState } from \"../controllers/useDrawingState\";\n\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { createQueryFigures } from \"../../domain-editor/interactions/query-figures\";\nimport { createUpdateBuildingBlock } from \"../../domain-editor/interactions/update-buildingblock\";\nimport { createPlaceDependencyRule } from \"../../domain-editor/interactions/place-dependency-rule\";\nimport { createSelectBuildingBlockForRule } from \"../../domain-editor/interactions/building-block-selection\";\nimport { createPlaceBuildingBlock } from \"../../domain-editor/interactions/place-buildingblock\";\nimport { Details } from \"../components/Details\";\nimport { createCloseSelection } from \"../../domain-editor/interactions/close-selection\";\nimport { createConvertToFeatureLint } from \"../../domain-converter/interactions/convertToFeatureLintJson\";\nimport { TopBar } from \"../components/hud/TopBar\";\nimport { createUpdateFeatureType } from \"../../domain-editor/interactions/update-featuretype\";\n\ntype Props = {};\nexport const EditorPlane = (props: Props) => {\n  const figures = useDrawingState();\n  const tool = useToolState();\n\n  const selectToolInteraction = (t: Tool) => tool.setCurrentTool(t);\n  const placeFeature = (f: FeatureTypeFigure) => {\n    figures.setFeatureTypeFigures((old) => [...old, f]);\n    tool.setCurrentTool(Tool({ type: \"SELECTION\" }));\n  };\n\n  const placeBuildingBlock = createPlaceBuildingBlock({\n    onBuildingBlocksUpdated: (bbs) => {\n      figures.setBuildingBlockFigures(bbs);\n      tool.setCurrentTool(Tool({ type: \"SELECTION\" }));\n    },\n    buildingBlocks: () => figures.buildingBlockFigures,\n  });\n\n  const placeDependencyRule = createPlaceDependencyRule({\n    onRules: (r) => figures.setRules(r),\n    buildingBlocks: () => figures.buildingBlockFigures,\n    rules: () => figures.rules,\n  });\n\n  const closeSelection = createCloseSelection({\n    tool: () => tool.currentTool,\n    onDetails: (d) => tool.setDetails(d?.id || null),\n  });\n  const toolBuildingBlockInteraction = createSelectBuildingBlockForRule({\n    onToolUpdated: (t: Tool) => tool.setCurrentTool(t),\n    onSelectedFigure: (bb) => tool.setDetails(bb?.id || null),\n    placeDependencyRule,\n    tool: () => tool.currentTool,\n  });\n\n  const queryBuildingBlocks = createQueryFigures(\n    figures.buildingBlockFigures,\n    figures.featureTypeFigures\n  );\n\n  const updateBuildingBlock = createUpdateBuildingBlock(\n    { onBuildingBlocks: figures.setBuildingBlockFigures },\n    figures.buildingBlockFigures\n  );\n\n  const updateFeatureType = createUpdateFeatureType({\n    onFeatures: (x) => figures.setFeatureTypeFigures(x),\n    featureTypes: () => figures.featureTypeFigures,\n  });\n\n  const convertToJson = createConvertToFeatureLint({\n    query: queryBuildingBlocks,\n    buildingBlocks: () => figures.buildingBlockFigures,\n    dependencyRules: () => figures.rules,\n    featureTypes: () => figures.featureTypeFigures,\n  });\n\n  return (\n    <Plane>\n      <TopBar convertToJson={convertToJson} />\n      <ToolBar tool={tool} selectTool={selectToolInteraction} />\n      <DrawingPlane\n        updateBuildingBlock={updateBuildingBlock}\n        updateFeatureType={updateFeatureType}\n        queryBuildingBlocks={queryBuildingBlocks}\n        placeFeature={placeFeature}\n        placeBuildingBlock={placeBuildingBlock}\n        onSelectFigure={toolBuildingBlockInteraction}\n        tool={tool}\n        figures={figures}\n      />\n      {tool.details ? (\n        <Details\n          query={queryBuildingBlocks}\n          onClose={closeSelection}\n          figureId={tool.details}\n        />\n      ) : null}\n    </Plane>\n  );\n};\n\nconst Plane = styled.div`\n  width: 100%;\n  height: 100vh;\n  position: relative;\n`;\n","import { BuildingBlockFigure } from \"../models/editor-core/BuildingBlockFigure\";\nimport { FeatureTypeFigure } from \"../models/editor-core/feature-type-figure/FeatureTypeFigure\";\n\nexport const createQueryFigures = (\n  bb: BuildingBlockFigure[],\n  featureFigures: FeatureTypeFigure[]\n) => {\n  return {\n    figureById: (id: string) => {\n      const maybeBb = bb.find((x) => x.id === id);\n      if (maybeBb) {\n        return maybeBb;\n      }\n      const maybeFeature = featureFigures.find((x) => x.id === id);\n      if (maybeFeature) {\n        return maybeFeature;\n      }\n      return null;\n    },\n  };\n};\nexport type QueryFigures = ReturnType<typeof createQueryFigures>;\n","import { useState } from \"react\";\n\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport { BuildingBlockFigure } from \"../../domain-editor/models/editor-core/BuildingBlockFigure\";\nimport { DependencyRuleFigure } from \"../../domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure\";\n\nexport const useDrawingState = () => {\n  const [featureTypeFigures, setFeatureTypeFigures] = useState<\n    FeatureTypeFigure[]\n  >([]);\n  const [buildingBlockFigures, setBuildingBlockFigures] = useState<\n    BuildingBlockFigure[]\n  >([]);\n  const [rules, setRules] = useState<DependencyRuleFigure[]>([]);\n\n  return {\n    featureTypeFigures,\n    setFeatureTypeFigures,\n    buildingBlockFigures,\n    setBuildingBlockFigures,\n    rules,\n    setRules,\n  };\n};\n\nexport type Figures = ReturnType<typeof useDrawingState>;\n","import { useState } from \"react\";\nimport { Tool } from \"../../domain-editor/models/editor-core/Tool\";\nimport { RuleGhost } from \"../../domain-editor/models/editor-core/RuleGhost\";\n\nexport const useToolState = () => {\n  const [currentTool, setCurrentTool] = useState<Tool>(\n    Tool({ type: \"SELECTION\" })\n  );\n  const [ruleGhost, setRuleGhost] = useState<RuleGhost | null>(null);\n  const [details, setDetails] = useState<string | null>(null);\n\n  return {\n    currentTool,\n    setCurrentTool,\n    ruleGhost,\n    setRuleGhost,\n    details,\n    setDetails,\n  };\n};\n\nexport type ToolState = ReturnType<typeof useToolState>;\n","import {\n  BuildingBlockFigure,\n  NewBuildingBlockFigureId,\n} from \"../models/editor-core/BuildingBlockFigure\";\n\ntype Listener = {\n  buildingBlocks: () => BuildingBlockFigure[];\n  onBuildingBlocksUpdated: (bb: BuildingBlockFigure[]) => any;\n};\nexport const createPlaceBuildingBlock =\n  ({ onBuildingBlocksUpdated, buildingBlocks }: Listener) =>\n  (x: number, y: number) => {\n    const created = BuildingBlockFigure({\n      id: NewBuildingBlockFigureId(),\n      type: \"BuildingBlockFigure\",\n      width: 75 * 2,\n      height: 75,\n      x: x,\n      y: y,\n      bbName: \"unamed\",\n    });\n    const updatedBbs = [...buildingBlocks(), created];\n    onBuildingBlocksUpdated(updatedBbs);\n  };\n\nexport type PlaceBuildingblock = ReturnType<typeof createPlaceBuildingBlock>;\n","import { BuildingBlockFigure } from \"../models/editor-core/BuildingBlockFigure\";\nimport { DependencyRuleFigure } from \"../models/editor-core/dependency-rule/DependencyRuleFigure\";\nimport { NewDependencyRuleFigureId } from \"../models/editor-core/dependency-rule/DependencyRuleFigureId\";\n\ntype Listener = {\n  onRules: (r: DependencyRuleFigure[]) => any;\n  buildingBlocks: () => BuildingBlockFigure[];\n  rules: () => DependencyRuleFigure[];\n};\nexport const createPlaceDependencyRule =\n  ({ onRules, buildingBlocks, rules }: Listener) =>\n  (startBB: BuildingBlockFigure, endBB: BuildingBlockFigure) => {\n    const start = buildingBlocks().find((b) => b.id === startBB.id);\n    const end = buildingBlocks().find((b) => b.id === endBB.id);\n\n    if (!start || !end) {\n      return;\n    }\n\n    const newRules = [\n      ...rules(),\n      DependencyRuleFigure({\n        id: NewDependencyRuleFigureId(),\n        from: start.id,\n        to: end.id,\n      }),\n    ];\n    onRules(newRules);\n  };\n\nexport type PlaceDependencyRule = ReturnType<typeof createPlaceDependencyRule>;\n","import { Tool } from \"../models/editor-core/Tool\";\nimport { BuildingBlockFigure } from \"../models/editor-core/BuildingBlockFigure\";\n\ntype Listener = {\n  tool: () => Tool;\n  onDetails: (x: BuildingBlockFigure | null) => any;\n};\nexport const createCloseSelection =\n  ({ tool, onDetails }: Listener) =>\n  () => {\n    const current = tool();\n    if (current.type === \"SELECTION\") {\n      onDetails(null);\n    }\n  };\n\nexport type CloseSelection = ReturnType<typeof createCloseSelection>;\n","import { isFirstSelection, RuleTool } from \"../models/editor-core/RuleTool\";\nimport { Tool } from \"../models/editor-core/Tool\";\nimport { BuildingBlockFigure } from \"../models/editor-core/BuildingBlockFigure\";\nimport { PlaceDependencyRule } from \"./place-dependency-rule\";\nimport { Figure, isBuildingBlock } from \"../models/editor-core/figure/Figure\";\n\ntype Source = \"BLOCK\" | \"ICON\";\n\ntype Listener = {\n  onToolUpdated: (t: Tool) => any;\n  onSelectedFigure: (bb: Figure | null) => any;\n  placeDependencyRule: PlaceDependencyRule;\n  tool: () => Tool;\n};\nexport const createSelectBuildingBlockForRule =\n  ({ onToolUpdated, placeDependencyRule, tool, onSelectedFigure }: Listener) =>\n  (bb: Figure | null, source: Source) => {\n    const currentTool = tool();\n\n    if (currentTool.type === \"SELECTION\" && source !== \"BLOCK\") {\n      console.log(\"HI\", bb);\n      onSelectedFigure(bb);\n      return;\n    }\n\n    if (currentTool.type === \"PLACE_RULE\") {\n      const tool: RuleTool = RuleTool(currentTool);\n      const firstSelection = isFirstSelection(tool);\n      if (firstSelection && bb !== null && isBuildingBlock(bb)) {\n        const updatedTool = Tool({ ...currentTool, from: bb });\n        onToolUpdated(updatedTool);\n      } else {\n        if (currentTool.from === null || bb === null || !isBuildingBlock(bb)) {\n          throw new Error(\n            \"Invalid state. Second Place Rule does only work on Valid BBs, but was placed on \" +\n              bb\n          );\n        }\n        placeDependencyRule(BuildingBlockFigure(currentTool.from), bb);\n        onToolUpdated(Tool({ type: \"SELECTION\" }));\n      }\n    }\n  };\n\nexport type SelectionAction = ReturnType<\n  typeof createSelectBuildingBlockForRule\n>;\n","import { DependencyRuleFigure } from \"../../domain-editor/models/editor-core/dependency-rule/DependencyRuleFigure\";\nimport {\n  BuildingBlockFigure,\n  BuildingBlockFigureId,\n} from \"../../domain-editor/models/editor-core/BuildingBlockFigure\";\nimport { FeatureTypeFigure } from \"../../domain-editor/models/editor-core/feature-type-figure/FeatureTypeFigure\";\nimport {\n  GeometryRect,\n  intersectRect,\n  toGeometryRect,\n} from \"../../domain-editor/models/editor-core/figure/geometry\";\nimport { QueryFigures } from \"../../domain-editor/interactions/query-figures\";\nimport { isBuildingBlock } from \"../../domain-editor/models/editor-core/figure/Figure\";\n\ntype StateDeps = {\n  dependencyRules: () => DependencyRuleFigure[];\n  buildingBlocks: () => BuildingBlockFigure[];\n  featureTypes: () => FeatureTypeFigure[];\n  query: QueryFigures;\n};\n\nexport const createConvertToFeatureLint =\n  ({ dependencyRules, buildingBlocks, featureTypes, query }: StateDeps) =>\n  () => {\n    const allFeatureTypes: { [featurName: string]: any } = {};\n    for (const f of featureTypes()) {\n      const featureRect: GeometryRect = toGeometryRect(f);\n      allFeatureTypes[f.name] = {};\n      for (const bb of buildingBlocks()) {\n        const bbRect: GeometryRect = toGeometryRect(bb);\n        if (intersectRect(bbRect, featureRect)) {\n          let depCriteria: string[] = [];\n          for (const allowedImport of dependencyRules()) {\n            const bb1 = query.figureById(\n              BuildingBlockFigureId(allowedImport.from)\n            );\n            const bb2 = query.figureById(\n              BuildingBlockFigureId(allowedImport.to)\n            );\n\n            if (!bb1 || !bb2) {\n              throw new Error(\n                \"Trying to create a dep rule from \" +\n                  bb1 +\n                  \" to \" +\n                  bb2 +\n                  \" but one of them is null\"\n              );\n            }\n            if (isBuildingBlock(bb2)) {\n              depCriteria = [...depCriteria, \"@\" + bb2.bbName];\n            }\n          }\n          allFeatureTypes[f.name] = {\n            ...allFeatureTypes[f.name],\n            [bb.bbName]: {\n              rules: [\n                {\n                  name: \"dependencies\",\n                  criteria: depCriteria,\n                },\n              ],\n            },\n          };\n        }\n      }\n    }\n    const created = {\n      $schema:\n        \"https://raw.githubusercontent.com/feature-lint/feature-lint/pages/schema/feature-lint-v0.0.15.schema.json\",\n      rootDir: \"./src/features\",\n      featureTypes: allFeatureTypes,\n    };\n    return created;\n  };\nexport type ConvertToFeatureLintJson = ReturnType<\n  typeof createConvertToFeatureLint\n>;\n","import * as React from 'react';\nimport {EditorPlane} from \"../features/react-editor/wired/EditorPlane\";\n\ntype Props = {\n\n};\nexport const App = (props: Props) => {\n    return (\n        <EditorPlane />\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./appshell/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}